{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [{\n  label: 'Select Country',\n  value: ''\n}, {\n  label: 'Singapore',\n  value: 'Singapore'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Malaysia',\n  value: 'Malaysia'\n}];\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedCountry = _useState10[0],\n    setSelectedCountry = _useState10[1];\n  var _useState11 = useState(new Date()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateOfBirth = _useState12[0],\n    setDateOfBirth = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showDatePicker = _useState14[0],\n    setShowDatePicker = _useState14[1];\n  var handleSignUp = function handleSignUp() {\n    console.log({\n      userName: userName,\n      password: password,\n      confirmPassword: confirmPassword,\n      email: email,\n      selectedCountry: selectedCountry,\n      dateOfBirth: dateOfBirth\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"User Name\",\n      placeholderTextColor: \"gray\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      placeholderTextColor: \"gray\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      placeholderTextColor: \"gray\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      placeholderTextColor: \"gray\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\"\n    }), _jsx(View, {\n      style: styles.pickerContainer,\n      children: _jsx(Picker, {\n        selectedValue: selectedCountry,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedCountry(itemValue);\n        },\n        style: styles.picker,\n        children: countries.map(function (country) {\n          return _jsx(Picker.Item, {\n            label: country.label,\n            value: country.value\n          }, country.value);\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.datePickerButton,\n      onPress: function onPress() {\n        return setShowDatePicker(true);\n      },\n      children: _jsx(Text, {\n        style: styles.pickerButtonText,\n        children: dateOfBirth.toDateString()\n      })\n    }), showDatePicker && _jsx(DateTimePicker, {\n      value: dateOfBirth,\n      mode: \"date\",\n      display: \"default\",\n      onChange: function onChange(event, selectedDate) {\n        setShowDatePicker(false);\n        if (selectedDate) {\n          setDateOfBirth(selectedDate);\n        }\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSignUp\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    color: 'black'\n  },\n  pickerContainer: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  picker: {\n    height: 40,\n    color: 'black'\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10\n  },\n  pickerButtonText: {\n    color: 'black'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","TextInput","Text","Button","TouchableOpacity","Modal","Picker","DateTimePicker","jsx","_jsx","jsxs","_jsxs","countries","label","value","SignUpScreen","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","email","setEmail","_useState9","_useState10","selectedCountry","setSelectedCountry","_useState11","Date","_useState12","dateOfBirth","setDateOfBirth","_useState13","_useState14","showDatePicker","setShowDatePicker","handleSignUp","console","log","style","styles","container","children","input","placeholder","placeholderTextColor","onChangeText","secureTextEntry","keyboardType","pickerContainer","selectedValue","onValueChange","itemValue","picker","map","country","Item","datePickerButton","onPress","pickerButtonText","toDateString","mode","display","onChange","event","selectedDate","title","create","flex","padding","backgroundColor","height","borderColor","borderWidth","marginBottom","color","paddingLeft","justifyContent"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, TextInput, Text, Button, TouchableOpacity, Modal, Picker } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst countries = [\n  { label: 'Select Country', value: '' },\n  { label: 'Singapore', value: 'Singapore' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Malaysia', value: 'Malaysia' },\n];\n\nconst SignUpScreen = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleSignUp = () => {\n    // Handle sign up logic here, e.g., send data to your express server\n    console.log({\n      userName,\n      password,\n      confirmPassword,\n      email,\n      selectedCountry,\n      dateOfBirth,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"User Name\"\n        placeholderTextColor=\"gray\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        placeholderTextColor=\"gray\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        placeholderTextColor=\"gray\"\n        value={confirmPassword}\n        onChangeText={setConfirmPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        placeholderTextColor=\"gray\"\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n      />\n      <View style={styles.pickerContainer}>\n        <Picker\n          selectedValue={selectedCountry}\n          onValueChange={(itemValue) => setSelectedCountry(itemValue)}\n          style={styles.picker}\n        >\n          {countries.map((country) => (\n            <Picker.Item\n              key={country.value}\n              label={country.label}\n              value={country.value}\n            />\n          ))}\n        </Picker>\n      </View>\n      <TouchableOpacity\n        style={styles.datePickerButton}\n        onPress={() => setShowDatePicker(true)}\n      >\n        <Text style={styles.pickerButtonText}>\n          {dateOfBirth.toDateString()}\n        </Text>\n      </TouchableOpacity>\n      {showDatePicker && (\n        <DateTimePicker\n          value={dateOfBirth}\n          mode=\"date\"\n          display=\"default\"\n          onChange={(event, selectedDate) => {\n            setShowDatePicker(false);\n            if (selectedDate) {\n              setDateOfBirth(selectedDate);\n            }\n          }}\n        />\n      )}\n      <Button title=\"Sign Up\" onPress={handleSignUp} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    color: 'black',\n  },\n  pickerContainer: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10,\n  },\n  picker: {\n    height: 40,\n    color: 'black',\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10,\n  },\n  pickerButtonText: {\n    color: 'black',\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}