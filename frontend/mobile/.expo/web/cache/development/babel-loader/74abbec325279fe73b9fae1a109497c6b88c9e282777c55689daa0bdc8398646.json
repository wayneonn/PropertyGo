{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from 'expo-file-system';\nimport { WebBrowser } from 'expo-web-browser';\nimport FileSaver from 'file-saver';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    descriptions = _useState4[0],\n    setDescriptions = _useState4[1];\n  var _useState5 = useState(200),\n    _useState6 = _slicedToArray(_useState5, 2),\n    length = _useState6[0],\n    setLength = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    prevDocuments = _useState8[0],\n    setPrevDocuments = _useState8[1];\n  var fetchDocuments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('http://localhost:3000/documents/list');\n        var _documents = yield response.json();\n        setPrevDocuments(_documents);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchDocuments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var downloadPDF = function () {\n    var _ref3 = _asyncToGenerator(function* (document) {\n      if (Platform.OS === 'web') {\n        var blob = new Blob([buffer], {\n          type: 'application/octet-stream'\n        });\n        var url = URL.createObjectURL(blob);\n        FileSaver.saveAs(blob, filename);\n        URL.revokeObjectURL(url);\n      } else {\n        var _yield$FileSystem$wri = yield FileSystem.writeAsStringAsync(FileSystem.documentDirectory + document.name, document.data, {\n            encoding: FileSystem.EncodingType.Base64\n          }),\n          _uri = _yield$FileSystem$wri.uri;\n      }\n      if (uri) {\n        alert('Downloaded to ' + uri);\n      } else {\n        alert('Failed to download PDF');\n      }\n    });\n    return function downloadPDF(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchDocuments();\n  }, []);\n  useEffect(function () {\n    console.log(prevDocuments);\n    setPrevDocuments(prevDocuments);\n  }, [prevDocuments]);\n  var selectDocuments = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var results = yield DocumentPicker.getDocumentAsync({\n          multiple: true,\n          type: \"application/pdf\"\n        });\n        if (results.canceled === false) {\n          var newSelectedDocuments = results.assets;\n          setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n        }\n      } catch (error) {\n        console.log(\"Error selecting documents:\", error);\n      }\n    });\n    return function selectDocuments() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var removeDocument = function removeDocument(document) {\n    var newSelectedDocuments = selectedDocuments.filter(function (doc) {\n      return doc.name !== document.name;\n    });\n    setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n  };\n  var removeDocumentFromServer = function () {\n    var _ref5 = _asyncToGenerator(function* (document) {\n      try {\n        var url = `http://localhost:3000/documents/${document.id}`;\n        var response = yield fetch(url, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          console.log('Document deleted successfully');\n          fetchDocuments();\n        } else {\n          throw 'Error deleting document';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function removeDocumentFromServer(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var downloadDocumentFromServer = function downloadDocumentFromServer(document) {\n    downloadPDF(document);\n  };\n  var handleUpload = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var fileData = new FormData();\n        selectedDocuments.forEach(function (document) {\n          var fileuri = document.uri;\n          var filetype = \"application/pdf\";\n          var filename = document.name;\n          var file = {\n            uri: fileuri,\n            type: filetype,\n            name: filename\n          };\n          var base64Data = file.uri.split(\",\")[1];\n          var base64String = window.atob(base64Data);\n          var bytes = new Uint8Array(base64String.length);\n          for (var i = 0; i < base64String.length; i++) {\n            bytes[i] = base64String.charCodeAt(i);\n          }\n          var fileBlob = new Blob([bytes], {\n            type: file.type\n          });\n          fileData.append(\"documents\", fileBlob, filename);\n          fileData.append(\"description\", descriptions);\n        });\n        var response = yield fetch(\"http://127.0.0.1:3000/documents/upload\", {\n          method: \"post\",\n          body: fileData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(\"Upload response:\", data);\n          fetchDocuments();\n        } else {\n          throw new Error(\"File upload failed\");\n        }\n      } catch (error) {\n        console.log(\"Error upload:\", error);\n      }\n    });\n    return function handleUpload() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var documents = [{\n    id: 1,\n    name: \"Your selected documents would appear here.\"\n  }];\n  var prevDummyDocuments = [{\n    id: 1,\n    name: \"Your previous documents would appear here.\"\n  }];\n  var renderDocumentItem = function renderDocumentItem(_ref7) {\n    var item = _ref7.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.documentItem,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      }), _jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Remove\",\n        onPress: function onPress() {\n          return removeDocument(item);\n        }\n      })]\n    });\n  };\n  var renderDocumentListItem = function renderDocumentListItem(_ref8) {\n    var item = _ref8.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.documentItem,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.descriptionText,\n          children: \"Description: \"\n        }), _jsx(Text, {\n          style: styles.documentText,\n          children: item.description\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Remove\",\n          onPress: function onPress() {\n            return removeDocumentFromServer(item);\n          }\n        }), _jsx(Text, {\n          children: \"\\xA0\"\n        }), _jsx(Button, {\n          style: styles.downloadButton,\n          title: \"Download\",\n          onPress: function onPress() {\n            return downloadDocumentFromServer(item);\n          }\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Upload your documents here!\"\n    }), _jsxs(View, {\n      style: styles.documentListContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"List of selected Documents:\"\n      }), _jsx(FlatList, {\n        ListEmptyComponent: function ListEmptyComponent() {\n          return _jsx(Text, {\n            style: styles.emptyListText,\n            children: \" Your selected documents would appear here.\"\n          });\n        },\n        data: selectedDocuments,\n        keyExtractor: function keyExtractor(item, index) {\n          return item.id ? item.id.toString() : index.toString();\n        },\n        renderItem: renderDocumentItem\n      })]\n    }), _jsxs(View, {\n      style: styles.descriptionContainer,\n      children: [_jsxs(Text, {\n        style: styles.detailText,\n        children: [\" \", \"Write your description for the files selected:\", \" \"]\n      }), _jsx(TextInput, {\n        style: styles.descriptionInput,\n        placeholder: \"Add a description\",\n        value: descriptions,\n        maxLength: 200,\n        onChangeText: function onChangeText(text) {\n          setDescriptions(text);\n          setLength(200 - text.length);\n        }\n      }), _jsxs(Text, {\n        children: [\" Remaining: \", length]\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Select Documents\",\n        onPress: selectDocuments\n      }), _jsx(Text, {\n        children: \" \\xA0\\xA0\\xA0 \"\n      }), _jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Upload Documents\",\n        onPress: handleUpload\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {}), _jsx(View, {\n        style: {\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginVertical: 10\n        }\n      }), _jsx(Text, {\n        style: styles.detailText,\n        children: \"Previously Uploaded Documents: \"\n      }), _jsx(View, {\n        style: styles.documentListContainer,\n        children: _jsx(FlatList, {\n          data: prevDocuments,\n          renderItem: renderDocumentListItem,\n          ListEmptyComponent: function ListEmptyComponent() {\n            return _jsx(Text, {\n              style: styles.emptyListText,\n              children: \" Your previous documents would appear here.\"\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return item.id ? item.id.toString() : index.toString();\n          },\n          extraData: prevDocuments\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\"\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 16\n  },\n  descriptionContainer: {\n    marginVertical: 16\n  },\n  descriptionInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 8,\n    marginVertical: 8,\n    padding: 8\n  },\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: 16,\n    borderRadius: 8\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: \"bold\"\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14\n  },\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: 8\n  },\n  documentText: {\n    fontSize: 14,\n    color: \"#333\"\n  },\n  descriptionText: {\n    fontSize: 14,\n    fontStyle: \"italic\",\n    fontWeight: \"bold\"\n  },\n  descriptiontContainer: {\n    alignContent: \"top-left\"\n  }\n});\nexport default UploadScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","Button","FlatList","TextInput","TouchableOpacity","DocumentPicker","FileSystem","WebBrowser","FileSaver","jsx","_jsx","jsxs","_jsxs","UploadScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedDocuments","setSelectedDocuments","_useState3","_useState4","descriptions","setDescriptions","_useState5","_useState6","length","setLength","_useState7","_useState8","prevDocuments","setPrevDocuments","fetchDocuments","_ref2","_asyncToGenerator","response","fetch","documents","json","error","console","apply","arguments","downloadPDF","_ref3","document","Platform","OS","blob","Blob","buffer","type","url","URL","createObjectURL","saveAs","filename","revokeObjectURL","_yield$FileSystem$wri","writeAsStringAsync","documentDirectory","name","data","encoding","EncodingType","Base64","uri","alert","_x","log","selectDocuments","_ref4","results","getDocumentAsync","multiple","canceled","newSelectedDocuments","assets","_toConsumableArray","removeDocument","filter","doc","removeDocumentFromServer","_ref5","id","method","ok","_x2","downloadDocumentFromServer","handleUpload","_ref6","fileData","FormData","forEach","fileuri","filetype","file","base64Data","split","base64String","window","atob","bytes","Uint8Array","i","charCodeAt","fileBlob","append","body","Error","prevDummyDocuments","renderDocumentItem","_ref7","item","style","styles","documentItem","children","documentText","downloadButton","title","onPress","renderDocumentListItem","_ref8","descriptionText","description","container","headerText","documentListContainer","detailText","ListEmptyComponent","emptyListText","keyExtractor","index","toString","renderItem","descriptionContainer","descriptionInput","placeholder","value","maxLength","onChangeText","text","buttonContainer","borderBottomColor","borderBottomWidth","marginVertical","extraData","create","flex","padding","backgroundColor","fontSize","marginBottom","textAlign","flexDirection","alignItems","height","borderColor","borderWidth","borderRadius","color","fontWeight","paddingTop","justifyContent","fontStyle","descriptiontContainer","alignContent"],"sources":["/Users/limzhongzhi/Desktop/PropertyGo/PropertyGo/frontend/mobile/DocumentScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  FlatList,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from 'expo-file-system';\nimport { WebBrowser } from 'expo-web-browser';\nimport FileSaver from 'file-saver';\n\nfunction UploadScreen({ navigation }) {\n  const [selectedDocuments, setSelectedDocuments] = useState([]);\n  const [descriptions, setDescriptions] = useState(\"\");\n  const [length, setLength] = useState(200);\n  const [prevDocuments, setPrevDocuments] = useState([]); // This is suppose to be the list of documents that you have uploaded previously.\n\n  const fetchDocuments = async() => {\n    try {\n      const response = await fetch('http://localhost:3000/documents/list');\n      const documents = await response.json();\n      setPrevDocuments(documents);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const downloadPDF = async(document) => {\n    if(Platform.OS === 'web') {\n      // Web download logic\n      // Web: convert buffer to blob\n      const blob = new Blob([buffer], {type: 'application/octet-stream'});\n      const url = URL.createObjectURL(blob);\n      // Use FileSaver to download\n      FileSaver.saveAs(blob, filename);\n      URL.revokeObjectURL(url);\n\n    } else {\n      // Native FileSystem logic\n      const { uri } = await FileSystem.writeAsStringAsync(\n        FileSystem.documentDirectory + document.name, \n        document.data,\n        { encoding: FileSystem.EncodingType.Base64 }\n      );\n    }\n    if(uri) {\n      alert('Downloaded to ' + uri);\n    } else {\n      alert('Failed to download PDF');\n    }\n  \n  }\n\n  // Fetch the previous documents from the server. \n  useEffect(() => {\n    fetchDocuments()\n  }, []);\n\n  useEffect(() => { \n    console.log(prevDocuments);\n    setPrevDocuments(prevDocuments);\n  }, [prevDocuments])\n\n  // This is suppose to show all the documents that you selected.\n  const selectDocuments = async () => {\n    try {\n      const results = await DocumentPicker.getDocumentAsync({\n        multiple: true,\n        type: \"application/pdf\",\n      });\n\n      // If there is a file that is selected.\n      if (results.canceled === false) {\n        const newSelectedDocuments = results.assets;\n        setSelectedDocuments([...newSelectedDocuments]);\n      }\n    } catch (error) {\n      console.log(\"Error selecting documents:\", error);\n    }\n  };\n\n  // This is suppose to remove a documents from the selected documents list.\n  const removeDocument = (document) => {\n    const newSelectedDocuments = selectedDocuments.filter(\n      (doc) => doc.name !== document.name\n    );\n    setSelectedDocuments([...newSelectedDocuments]);\n  };\n\n  const removeDocumentFromServer = async(document) => {\n    try {\n      const url = `http://localhost:3000/documents/${document.id}`;\n      const response = await fetch(url, {\n        method: 'DELETE' \n      });\n      if (response.ok) {\n        console.log('Document deleted successfully');\n        // redirect or update state\n        fetchDocuments();\n      } else {\n        throw 'Error deleting document';\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const downloadDocumentFromServer = (document) => {\n    downloadPDF(document);\n  }\n\n  // This then uploads the documents you selected.\n  const handleUpload = async () => {\n    try {\n      //Begin logic to send data to API\n      const fileData = new FormData();\n      // Append each selected document to the FormData object\n      selectedDocuments.forEach((document) => {\n        const fileuri = document.uri;\n        const filetype = \"application/pdf\";\n        const filename = document.name;\n\n        const file = {\n          uri: fileuri,\n          type: filetype,\n          name: filename,\n        };\n\n        // Extract the base64-encoded data from the URI\n        const base64Data = file.uri.split(\",\")[1];\n\n        // Decode the base64 string into a Uint8Array\n        const base64String = window.atob(base64Data);\n        const bytes = new Uint8Array(base64String.length);\n        for (let i = 0; i < base64String.length; i++) {\n          bytes[i] = base64String.charCodeAt(i);\n        }\n\n        // Create a Blob object from the decoded data\n        const fileBlob = new Blob([bytes], { type: file.type });\n        // console.log(fileBlob);\n        // console.log(descriptions);\n        // console.log(fileData.get(\"description\"));\n        // console.log(...selectedDocuments);\n        fileData.append(\"documents\", fileBlob, filename);\n        fileData.append(\"description\", descriptions);\n      });\n\n      // Send the data to the API\n      const response = await fetch(\"http://127.0.0.1:3000/documents/upload\", {\n        method: \"post\",\n        body: fileData,\n      });\n\n      // Check the response status and log the result\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Upload response:\", data);\n        fetchDocuments()\n      } else {\n        throw new Error(\"File upload failed\");\n      }\n    } catch (error) {\n      console.log(\"Error upload:\", error);\n    }\n  };\n\n  // Initial dummy documents.\n  const documents = [\n    { id: 1, name: \"Your selected documents would appear here.\" },\n  ];\n\n  const prevDummyDocuments = [\n    {id: 1, name: \"Your previous documents would appear here.\"}\n  ]\n\n  const renderDocumentItem = ({ item }) => (\n    <TouchableOpacity style={styles.documentItem}>\n      <Text style={styles.documentText}>{item.name}</Text>\n      <Button\n        style={styles.downloadButton}\n        title=\"Remove\"\n        onPress={() => removeDocument(item)}\n      />\n    </TouchableOpacity>\n  );\n  \n  const renderDocumentListItem = ({ item }) => (\n    <TouchableOpacity style={styles.documentItem}>\n      <Text style={styles.documentText}>{item.name}</Text>\n      <View>\n        <Text style={styles.descriptionText}>Description: </Text>\n        <Text style={styles.documentText}>{item.description}</Text>\n      </View>\n      <View> \n        <Button\n          style={styles.downloadButton}\n          title=\"Remove\"\n          onPress={() => removeDocumentFromServer(item)}\n        />\n        <Text>&nbsp;</Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Download\"\n          onPress={() => downloadDocumentFromServer(item)}\n        />\n      </View>\n    </TouchableOpacity>\n  )\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Upload your documents here!</Text>\n      {/* Wrap the FlatList in a View with border styles */}\n      <View style={styles.documentListContainer}>\n        <Text style={styles.detailText}>List of selected Documents:</Text>\n        <FlatList\n          ListEmptyComponent={() => (<Text style={styles.emptyListText}> Your selected documents would appear here.</Text>)}\n          data={selectedDocuments}\n          keyExtractor={(item, index) =>\n            item.id ? item.id.toString() : index.toString()\n          }\n          renderItem={renderDocumentItem}\n        />\n      </View>\n      <View style={styles.descriptionContainer}>\n        <Text style={styles.detailText}>\n          {\" \"}\n          Write your description for the files selected:{\" \"}\n        </Text>\n        <TextInput\n          style={styles.descriptionInput}\n          placeholder=\"Add a description\"\n          value={descriptions}\n          maxLength={200} // max length of the text\n          onChangeText={(text) => {\n            setDescriptions(text);\n            setLength(200 - text.length);\n          }}\n        />\n        <Text> Remaining: {length}</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <Button\n          style={styles.downloadButton}\n          title=\"Select Documents\"\n          onPress={selectDocuments}\n        />\n        <Text> &nbsp;&nbsp;&nbsp; </Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Upload Documents\"\n          onPress={handleUpload}\n        />\n      </View>\n\n      <View>\n        <TextInput />\n\n        <View\n          style={{\n            borderBottomColor: \"black\",\n            borderBottomWidth: 1,\n            marginVertical: 10,\n          }}\n        />\n\n        <Text style={styles.detailText}>Previously Uploaded Documents: </Text>\n        <View style={styles.documentListContainer}> \n          <FlatList\n            data={prevDocuments}\n            renderItem={renderDocumentListItem}\n            ListEmptyComponent={() => (<Text style={styles.emptyListText}> Your previous documents would appear here.</Text>)}\n            keyExtractor={(item, index) =>\n              item.id ? item.id.toString() : index.toString()\n            }\n            extraData={prevDocuments}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\",\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 16,\n  },\n  descriptionContainer: {\n    marginVertical: 16,\n  },\n  descriptionInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 8,\n    marginVertical: 8,\n    padding: 8,\n  },\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: 16,\n    borderRadius: 8,\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: \"bold\",\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14,\n  },\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: 8,\n  },\n  documentText: {\n    fontSize: 14,\n    color: \"#333\",\n  },\n  descriptionText: {\n    fontSize: 14, \n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n  }, \n  descriptiontContainer: {\n    alignContent: \"top-left\",\n  }\n});\n\nexport default UploadScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}