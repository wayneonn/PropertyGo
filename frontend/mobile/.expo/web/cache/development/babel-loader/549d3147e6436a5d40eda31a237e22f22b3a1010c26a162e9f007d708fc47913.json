{"ast":null,"code":"import { TurboModuleRegistry } from \"react-native-web/dist/index\";\nexport var NativeDocumentPicker = TurboModuleRegistry.getEnforcing('RNDocumentPicker');","map":{"version":3,"names":["TurboModuleRegistry","NativeDocumentPicker","getEnforcing"],"sources":["/Users/limzhongzhi/Desktop/PropertyGo/PropertyGo/frontend/mobile/node_modules/react-native-document-picker/src/NativeDocumentPicker.ts"],"sourcesContent":["import type { TurboModule } from 'react-native'\nimport { TurboModuleRegistry } from 'react-native'\n\nexport type DocumentPickerResponse = {\n  uri: string\n  name: string\n  copyError?: string\n  fileCopyUri: string | null\n  type: string | null\n  size: number | null\n}\n\nexport type DirectoryPickerResponse = {\n  uri: string\n}\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {}\n\n  // we use \"Object\" to still have backwards compability with already\n  // present methods on iOS, which use NSDictionary\n  pick(options: Object): Promise<DocumentPickerResponse[]>\n  releaseSecureAccess(uris: string[]): Promise<void>\n  pickDirectory(): Promise<DirectoryPickerResponse>\n}\n\nexport const NativeDocumentPicker = TurboModuleRegistry.getEnforcing<Spec>('RNDocumentPicker')\n"],"mappings":"SACSA,mBAAmB;AAyB5B,OAAO,IAAMC,oBAAoB,GAAGD,mBAAmB,CAACE,YAAY,CAAO,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}