{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar BASE_URL = 'http://localhost:3000';\nvar BASE_URL_WAYNE = 'http://172.25.106.189:3000';\nvar USER_ENDPOINT = 'user';\nexport var loginUser = function () {\n  var _ref = _asyncToGenerator(function* (userName, password) {\n    try {\n      var response = yield fetch(`${BASE_URL_WAYNE}/${USER_ENDPOINT}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName: userName,\n          password: password\n        })\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        return {\n          success: true,\n          data: data\n        };\n      } else {\n        var errorData = yield response.json();\n        return {\n          success: false,\n          message: errorData.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  });\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["BASE_URL","BASE_URL_WAYNE","USER_ENDPOINT","loginUser","_ref","_asyncToGenerator","userName","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","success","errorData","message","error","_x","_x2","apply","arguments"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/utils/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:3000';\nconst BASE_URL_WAYNE = 'http://172.25.106.189:3000';\nconst USER_ENDPOINT = 'user';\n\nexport const loginUser = async (userName, password) => {\n    try {\n      const response = await fetch(`${BASE_URL_WAYNE}/${USER_ENDPOINT}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ userName, password }),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        return { success: true, data };\n      } else {\n        const errorData = await response.json();\n        return { success: false, message: errorData.message };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n  "],"mappings":";AAAA,IAAMA,QAAQ,GAAG,uBAAuB;AACxC,IAAMC,cAAc,GAAG,4BAA4B;AACnD,IAAMC,aAAa,GAAG,MAAM;AAE5B,OAAO,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,QAAQ,EAAK;IACnD,IAAI;MACF,IAAMC,QAAQ,SAASC,KAAK,CAAE,GAAER,cAAe,IAAGC,aAAc,QAAO,EAAE;QACvEQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ,EAARA,QAAQ;UAAEC,QAAQ,EAARA;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACf,IAAMC,IAAI,SAASR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,OAAO;UAAEC,OAAO,EAAE,IAAI;UAAEF,IAAI,EAAJA;QAAK,CAAC;MAChC,CAAC,MAAM;QACL,IAAMG,SAAS,SAASX,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,OAAO;UAAEC,OAAO,EAAE,KAAK;UAAEE,OAAO,EAAED,SAAS,CAACC;QAAQ,CAAC;MACvD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QAAEH,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAEC,KAAK,CAACD;MAAQ,CAAC;IACnD;EACF,CAAC;EAAA,gBApBUjB,SAASA,CAAAmB,EAAA,EAAAC,GAAA;IAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAoBnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}