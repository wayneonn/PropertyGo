{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [{\n  label: 'Select Country',\n  value: ''\n}, {\n  label: 'Singapore',\n  value: 'Singapore'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Malaysia',\n  value: 'Malaysia'\n}];\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedCountry = _useState10[0],\n    setSelectedCountry = _useState10[1];\n  var _useState11 = useState(new Date()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateOfBirth = _useState12[0],\n    setDateOfBirth = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showDatePicker = _useState14[0],\n    setShowDatePicker = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showCountryPicker = _useState16[0],\n    setShowCountryPicker = _useState16[1];\n  var handleSignUp = function handleSignUp() {\n    console.log({\n      userName: userName,\n      password: password,\n      confirmPassword: confirmPassword,\n      email: email,\n      selectedCountry: selectedCountry,\n      dateOfBirth: dateOfBirth\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"User Name\",\n      placeholderTextColor: \"black\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TouchableOpacity, {\n      style: styles.pickerButton,\n      onPress: function onPress() {\n        return setShowCountryPicker(true);\n      },\n      children: _jsx(Text, {\n        style: styles.pickerButtonText,\n        children: selectedCountry || 'Select Country'\n      })\n    }), _jsx(Modal, {\n      transparent: true,\n      animationType: \"slide\",\n      visible: showCountryPicker,\n      onRequestClose: function onRequestClose() {\n        return setShowCountryPicker(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalView,\n        children: _jsx(Picker, {\n          selectedValue: selectedCountry,\n          onValueChange: function onValueChange(itemValue) {\n            setSelectedCountry(itemValue);\n            setShowCountryPicker(false);\n          },\n          children: countries.map(function (country) {\n            return _jsx(Picker.Item, {\n              label: country.label,\n              value: country.value\n            }, country.value);\n          })\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.datePickerButton,\n      onPress: function onPress() {\n        return setShowDatePicker(true);\n      },\n      children: _jsx(Text, {\n        style: styles.datePickerButtonText,\n        children: dateOfBirth.toDateString()\n      })\n    }), showDatePicker && _jsx(DateTimePicker, {\n      value: dateOfBirth,\n      mode: \"date\",\n      display: \"default\",\n      onChange: function onChange(event, selectedDate) {\n        setShowDatePicker(false);\n        if (selectedDate) {\n          setDateOfBirth(selectedDate);\n        }\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSignUp\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    color: 'black'\n  },\n  pickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10\n  },\n  pickerButtonText: {\n    color: 'black'\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10\n  },\n  datePickerButtonText: {\n    color: 'black'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","TextInput","Text","Button","TouchableOpacity","Modal","Picker","DateTimePicker","jsx","_jsx","jsxs","_jsxs","countries","label","value","SignUpScreen","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","email","setEmail","_useState9","_useState10","selectedCountry","setSelectedCountry","_useState11","Date","_useState12","dateOfBirth","setDateOfBirth","_useState13","_useState14","showDatePicker","setShowDatePicker","_useState15","_useState16","showCountryPicker","setShowCountryPicker","handleSignUp","console","log","style","styles","container","children","input","placeholder","placeholderTextColor","onChangeText","pickerButton","onPress","pickerButtonText","transparent","animationType","visible","onRequestClose","modalView","selectedValue","onValueChange","itemValue","map","country","Item","datePickerButton","datePickerButtonText","toDateString","mode","display","onChange","event","selectedDate","title","create","flex","padding","backgroundColor","height","borderColor","borderWidth","marginBottom","color","justifyContent","paddingLeft"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, TextInput, Text, Button, TouchableOpacity, Modal } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst countries = [\n  { label: 'Select Country', value: '' },\n  { label: 'Singapore', value: 'Singapore' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Malaysia', value: 'Malaysia' },\n];\n\nconst SignUpScreen = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [showCountryPicker, setShowCountryPicker] = useState(false);\n\n  const handleSignUp = () => {\n    // Handle sign up logic here, e.g., send data to your express server\n    console.log({\n      userName,\n      password,\n      confirmPassword,\n      email,\n      selectedCountry,\n      dateOfBirth,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"User Name\"\n        placeholderTextColor=\"black\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      {/* Other input fields */}\n      <TouchableOpacity\n        style={styles.pickerButton}\n        onPress={() => setShowCountryPicker(true)}\n      >\n        <Text style={styles.pickerButtonText}>{selectedCountry || 'Select Country'}</Text>\n      </TouchableOpacity>\n      <Modal\n        transparent={true}\n        animationType=\"slide\"\n        visible={showCountryPicker}\n        onRequestClose={() => setShowCountryPicker(false)}\n      >\n        <View style={styles.modalView}>\n          <Picker\n            selectedValue={selectedCountry}\n            onValueChange={(itemValue) => {\n              setSelectedCountry(itemValue);\n              setShowCountryPicker(false);\n            }}\n          >\n            {countries.map((country) => (\n              <Picker.Item\n                key={country.value}\n                label={country.label}\n                value={country.value}\n              />\n            ))}\n          </Picker>\n        </View>\n      </Modal>\n      <TouchableOpacity\n        style={styles.datePickerButton}\n        onPress={() => setShowDatePicker(true)}\n      >\n        <Text style={styles.datePickerButtonText}>{dateOfBirth.toDateString()}</Text>\n      </TouchableOpacity>\n      {showDatePicker && (\n        <DateTimePicker\n          value={dateOfBirth}\n          mode=\"date\"\n          display=\"default\"\n          onChange={(event, selectedDate) => {\n            setShowDatePicker(false);\n            if (selectedDate) {\n              setDateOfBirth(selectedDate);\n            }\n          }}\n        />\n      )}\n      <Button title=\"Sign Up\" onPress={handleSignUp} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    color: 'black',\n  },\n  pickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10,\n  },\n  pickerButtonText: {\n    color: 'black',\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: 'white',\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10,\n  },\n  datePickerButtonText: {\n    color: 'black',\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}