{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    descriptions = _useState4[0],\n    setDescriptions = _useState4[1];\n  var _useState5 = useState(200),\n    _useState6 = _slicedToArray(_useState5, 2),\n    length = _useState6[0],\n    setLength = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    prevDocuments = _useState8[0],\n    setPrevDocuments = _useState8[1];\n  var selectDocuments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var results = yield DocumentPicker.getDocumentAsync({\n          multiple: true,\n          type: \"application/pdf\"\n        });\n        if (results.canceled === false) {\n          var newSelectedDocuments = results.assets;\n          setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n        }\n      } catch (error) {\n        console.log(\"Error selecting documents:\", error);\n      }\n    });\n    return function selectDocuments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var removeDocument = function removeDocument(document) {\n    var newSelectedDocuments = selectedDocuments.filter(function (doc) {\n      return doc.name !== document.name;\n    });\n    setSelectedDocuments(_toConsumableArray(newSelectedDocuments));\n  };\n  var handleUpload = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var fileData = new FormData();\n        selectedDocuments.forEach(function (document) {\n          var _console;\n          var fileuri = document.uri;\n          var filetype = \"application/pdf\";\n          var filename = document.name;\n          var file = {\n            uri: fileuri,\n            type: filetype,\n            name: filename\n          };\n          var base64Data = file.uri.split(\",\")[1];\n          var base64String = window.atob(base64Data);\n          var bytes = new Uint8Array(base64String.length);\n          for (var i = 0; i < base64String.length; i++) {\n            bytes[i] = base64String.charCodeAt(i);\n          }\n          var fileBlob = new Blob([bytes], {\n            type: file.type\n          });\n          console.log(fileBlob);\n          console.log(descriptions);\n          console.log(fileData.get(\"description\"));\n          (_console = console).log.apply(_console, _toConsumableArray(selectedDocuments));\n          fileData.append(\"documents\", fileBlob, filename);\n          fileData.append(\"description\", descriptions);\n        });\n        var response = yield fetch(\"http://127.0.0.1:3000/documents/upload\", {\n          method: \"post\",\n          body: fileData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(\"Upload response:\", data);\n        } else {\n          throw new Error(\"File upload failed\");\n        }\n      } catch (error) {\n        console.log(\"Error upload:\", error);\n      }\n    });\n    return function handleUpload() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var documents = [{\n    id: 1,\n    name: \"Your selected documents would appear here.\"\n  }];\n  var renderDocumentItem = function renderDocumentItem(_ref4) {\n    var item = _ref4.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.documentItem,\n      children: [_jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      }), _jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Remove\",\n        onPress: function onPress() {\n          return removeDocument(item);\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Upload your documents here!\"\n    }), _jsxs(View, {\n      style: styles.documentListContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"List of selected Documents:\"\n      }), _jsx(FlatList, {\n        data: selectedDocuments.length > 0 ? selectedDocuments : documents,\n        keyExtractor: function keyExtractor(item, index) {\n          return item.id ? item.id.toString() : index.toString();\n        },\n        renderItem: renderDocumentItem\n      })]\n    }), _jsxs(View, {\n      style: styles.descriptionContainer,\n      children: [_jsxs(Text, {\n        style: styles.detailText,\n        children: [\" \", \"Write your description for the files selected:\", \" \"]\n      }), _jsx(TextInput, {\n        style: styles.descriptionInput,\n        placeholder: \"Add a description\",\n        value: descriptions,\n        maxLength: 200,\n        onChangeText: function onChangeText(text) {\n          setDescriptions(text);\n          setLength(200 - text.length);\n        }\n      }), _jsxs(Text, {\n        children: [\" Remaining: \", length]\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Select Documents\",\n        onPress: selectDocuments\n      }), _jsx(Text, {\n        children: \" \\xA0\\xA0\\xA0 \"\n      }), _jsx(Button, {\n        style: styles.downloadButton,\n        title: \"Upload Documents\",\n        onPress: handleUpload\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {}), _jsx(View, {\n        style: {\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginVertical: 10\n        }\n      }), _jsx(Text, {\n        style: styles.detailText,\n        children: \"Previously Uploaded Documents: \"\n      }), _jsx(FlatList, {\n        data: prevDocuments,\n        renderItem: function renderItem(_ref5) {\n          var item = _ref5.item;\n          return _jsx(Text, {\n            children: item.name\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\"\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 16\n  },\n  descriptionContainer: {\n    marginVertical: 16\n  },\n  descriptionInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 8,\n    marginVertical: 8,\n    padding: 8\n  },\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: 16,\n    borderRadius: 8\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: \"bold\"\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14\n  },\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: 8\n  },\n  documentText: {\n    fontSize: 14,\n    color: \"#333\"\n  }\n});\nexport default UploadScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","Button","FlatList","TextInput","TouchableOpacity","DocumentPicker","jsx","_jsx","jsxs","_jsxs","UploadScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedDocuments","setSelectedDocuments","_useState3","_useState4","descriptions","setDescriptions","_useState5","_useState6","length","setLength","_useState7","_useState8","prevDocuments","setPrevDocuments","selectDocuments","_ref2","_asyncToGenerator","results","getDocumentAsync","multiple","type","canceled","newSelectedDocuments","assets","_toConsumableArray","error","console","log","apply","arguments","removeDocument","document","filter","doc","name","handleUpload","_ref3","fileData","FormData","forEach","_console","fileuri","uri","filetype","filename","file","base64Data","split","base64String","window","atob","bytes","Uint8Array","i","charCodeAt","fileBlob","Blob","get","append","response","fetch","method","body","ok","data","json","Error","documents","id","renderDocumentItem","_ref4","item","style","styles","documentItem","children","documentText","downloadButton","title","onPress","container","headerText","documentListContainer","detailText","keyExtractor","index","toString","renderItem","descriptionContainer","descriptionInput","placeholder","value","maxLength","onChangeText","text","buttonContainer","borderBottomColor","borderBottomWidth","marginVertical","_ref5","create","flex","padding","backgroundColor","fontSize","marginBottom","textAlign","flexDirection","alignItems","height","borderColor","borderWidth","borderRadius","color","fontWeight","paddingTop","justifyContent"],"sources":["/Users/limzhongzhi/Desktop/PropertyGo/PropertyGo/frontend/mobile/DocumentScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  FlatList,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport * as DocumentPicker from \"expo-document-picker\";\n\nfunction UploadScreen({ navigation }) {\n  const [selectedDocuments, setSelectedDocuments] = useState([]);\n  const [descriptions, setDescriptions] = useState(\"\");\n  const [length, setLength] = useState(200);\n  const [prevDocuments, setPrevDocuments] = useState([]); // This is suppose to be the list of documents that you have uploaded previously.\n\n  // This is suppose to show all the documents that you selected.\n  const selectDocuments = async () => {\n    try {\n      const results = await DocumentPicker.getDocumentAsync({\n        multiple: true,\n        type: \"application/pdf\",\n      });\n\n      // If there is a file that is selected.\n      if (results.canceled === false) {\n        const newSelectedDocuments = results.assets;\n        setSelectedDocuments([...newSelectedDocuments]);\n      }\n    } catch (error) {\n      console.log(\"Error selecting documents:\", error);\n    }\n  };\n\n  // This is suppose to remove a documents from the selected documents list.\n  const removeDocument = (document) => {\n    const newSelectedDocuments = selectedDocuments.filter(\n      (doc) => doc.name !== document.name\n    );\n    setSelectedDocuments([...newSelectedDocuments]);\n  };\n\n  // This then uploads the documents you selected.\n  const handleUpload = async () => {\n    try {\n      //Begin logic to send data to API\n      const fileData = new FormData();\n      // Append each selected document to the FormData object\n      selectedDocuments.forEach((document) => {\n        const fileuri = document.uri;\n        const filetype = \"application/pdf\";\n        const filename = document.name;\n\n        const file = {\n          uri: fileuri,\n          type: filetype,\n          name: filename,\n        };\n\n        // Extract the base64-encoded data from the URI\n        const base64Data = file.uri.split(\",\")[1];\n\n        // Decode the base64 string into a Uint8Array\n        const base64String = window.atob(base64Data);\n        const bytes = new Uint8Array(base64String.length);\n        for (let i = 0; i < base64String.length; i++) {\n          bytes[i] = base64String.charCodeAt(i);\n        }\n\n        // Create a Blob object from the decoded data\n        const fileBlob = new Blob([bytes], { type: file.type });\n        console.log(fileBlob);\n        console.log(descriptions);\n        console.log(fileData.get(\"description\"));\n        console.log(...selectedDocuments);\n        fileData.append(\"documents\", fileBlob, filename);\n        fileData.append(\"description\", descriptions);\n      });\n\n      // Send the data to the API\n      const response = await fetch(\"http://127.0.0.1:3000/documents/upload\", {\n        method: \"post\",\n        body: fileData,\n      });\n\n      // Check the response status and log the result\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Upload response:\", data);\n      } else {\n        throw new Error(\"File upload failed\");\n      }\n    } catch (error) {\n      console.log(\"Error upload:\", error);\n    }\n  };\n\n  // Initial dummy documents.\n  const documents = [\n    { id: 1, name: \"Your selected documents would appear here.\" },\n  ];\n\n  const renderDocumentItem = ({ item }) => (\n    <TouchableOpacity style={styles.documentItem}>\n      <Text style={styles.documentText}>{item.name}</Text>\n      <Button\n        style={styles.downloadButton}\n        title=\"Remove\"\n        onPress={() => removeDocument(item)}\n      />\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Upload your documents here!</Text>\n      {/* Wrap the FlatList in a View with border styles */}\n      <View style={styles.documentListContainer}>\n        <Text style={styles.detailText}>List of selected Documents:</Text>\n        <FlatList\n          data={selectedDocuments.length > 0 ? selectedDocuments : documents}\n          keyExtractor={(item, index) =>\n            item.id ? item.id.toString() : index.toString()\n          }\n          renderItem={renderDocumentItem}\n        />\n      </View>\n      <View style={styles.descriptionContainer}>\n        <Text style={styles.detailText}>\n          {\" \"}\n          Write your description for the files selected:{\" \"}\n        </Text>\n        <TextInput\n          style={styles.descriptionInput}\n          placeholder=\"Add a description\"\n          value={descriptions}\n          maxLength={200} // max length of the text\n          onChangeText={(text) => {\n            setDescriptions(text);\n            setLength(200 - text.length);\n          }}\n        />\n        <Text> Remaining: {length}</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <Button\n          style={styles.downloadButton}\n          title=\"Select Documents\"\n          onPress={selectDocuments}\n        />\n        <Text> &nbsp;&nbsp;&nbsp; </Text>\n        <Button\n          style={styles.downloadButton}\n          title=\"Upload Documents\"\n          onPress={handleUpload}\n        />\n      </View>\n\n      <View>\n        <TextInput />\n\n        <View\n          style={{\n            borderBottomColor: \"black\",\n            borderBottomWidth: 1,\n            marginVertical: 10,\n          }}\n        />\n\n        <Text style={styles.detailText}>Previously Uploaded Documents: </Text>\n\n        <FlatList\n          data={prevDocuments}\n          renderItem={({ item }) => <Text>{item.name}</Text>}\n          keyExtractor={(item) => item.id}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"#fff\",\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 16,\n  },\n  descriptionContainer: {\n    marginVertical: 16,\n  },\n  descriptionInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 8,\n    marginVertical: 8,\n    padding: 8,\n  },\n  downloadButton: {\n    backgroundColor: \"#007AFF\",\n    color: \"#fff\",\n    padding: 16,\n    borderRadius: 8,\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: \"bold\",\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14,\n  },\n  documentItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: \"#F8F8F8\",\n    borderRadius: 8,\n  },\n  documentText: {\n    fontSize: 14,\n    color: \"#333\",\n  },\n});\n\nexport default UploadScreen;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAUxC,OAAO,KAAKC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvD,SAASC,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,IAAAC,SAAA,GAAkDhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAC9C,IAAAI,UAAA,GAAwCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA4BzB,QAAQ,CAAC,GAAG,CAAC;IAAA0B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAlCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAA0C7B,QAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAGtC,IAAMG,eAAe;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAClC,IAAI;QACF,IAAMC,OAAO,SAAS5B,cAAc,CAAC6B,gBAAgB,CAAC;UACpDC,QAAQ,EAAE,IAAI;UACdC,IAAI,EAAE;QACR,CAAC,CAAC;QAGF,IAAIH,OAAO,CAACI,QAAQ,KAAK,KAAK,EAAE;UAC9B,IAAMC,oBAAoB,GAAGL,OAAO,CAACM,MAAM;UAC3CtB,oBAAoB,CAAAuB,kBAAA,CAAKF,oBAAoB,CAAC,CAAC;QACjD;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;MAClD;IACF,CAAC;IAAA,gBAfKX,eAAeA,CAAA;MAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAepB;EAGD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,QAAQ,EAAK;IACnC,IAAMT,oBAAoB,GAAGtB,iBAAiB,CAACgC,MAAM,CACnD,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,IAAI,KAAKH,QAAQ,CAACG,IAAI;IAAA,CACrC,CAAC;IACDjC,oBAAoB,CAAAuB,kBAAA,CAAKF,oBAAoB,CAAC,CAAC;EACjD,CAAC;EAGD,IAAMa,YAAY;IAAA,IAAAC,KAAA,GAAApB,iBAAA,CAAG,aAAY;MAC/B,IAAI;QAEF,IAAMqB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAE/BtC,iBAAiB,CAACuC,OAAO,CAAC,UAACR,QAAQ,EAAK;UAAA,IAAAS,QAAA;UACtC,IAAMC,OAAO,GAAGV,QAAQ,CAACW,GAAG;UAC5B,IAAMC,QAAQ,GAAG,iBAAiB;UAClC,IAAMC,QAAQ,GAAGb,QAAQ,CAACG,IAAI;UAE9B,IAAMW,IAAI,GAAG;YACXH,GAAG,EAAED,OAAO;YACZrB,IAAI,EAAEuB,QAAQ;YACdT,IAAI,EAAEU;UACR,CAAC;UAGD,IAAME,UAAU,GAAGD,IAAI,CAACH,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAGzC,IAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC;UAC5C,IAAMK,KAAK,GAAG,IAAIC,UAAU,CAACJ,YAAY,CAACxC,MAAM,CAAC;UACjD,KAAK,IAAI6C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACxC,MAAM,EAAE6C,CAAC,EAAE,EAAE;YAC5CF,KAAK,CAACE,CAAC,CAAC,GAAGL,YAAY,CAACM,UAAU,CAACD,CAAC,CAAC;UACvC;UAGA,IAAME,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAACL,KAAK,CAAC,EAAE;YAAE/B,IAAI,EAAEyB,IAAI,CAACzB;UAAK,CAAC,CAAC;UACvDM,OAAO,CAACC,GAAG,CAAC4B,QAAQ,CAAC;UACrB7B,OAAO,CAACC,GAAG,CAACvB,YAAY,CAAC;UACzBsB,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACoB,GAAG,CAAC,aAAa,CAAC,CAAC;UACxC,CAAAjB,QAAA,GAAAd,OAAO,EAACC,GAAG,CAAAC,KAAA,CAAAY,QAAA,EAAAhB,kBAAA,CAAIxB,iBAAiB,EAAC;UACjCqC,QAAQ,CAACqB,MAAM,CAAC,WAAW,EAAEH,QAAQ,EAAEX,QAAQ,CAAC;UAChDP,QAAQ,CAACqB,MAAM,CAAC,aAAa,EAAEtD,YAAY,CAAC;QAC9C,CAAC,CAAC;QAGF,IAAMuD,QAAQ,SAASC,KAAK,CAAC,wCAAwC,EAAE;UACrEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEzB;QACR,CAAC,CAAC;QAGF,IAAIsB,QAAQ,CAACI,EAAE,EAAE;UACf,IAAMC,IAAI,SAASL,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCvC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEqC,IAAI,CAAC;QACvC,CAAC,MAAM;UACL,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;QACvC;MACF,CAAC,CAAC,OAAOzC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAAC;MACrC;IACF,CAAC;IAAA,gBApDKU,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAR,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoDjB;EAGD,IAAMsC,SAAS,GAAG,CAChB;IAAEC,EAAE,EAAE,CAAC;IAAElC,IAAI,EAAE;EAA6C,CAAC,CAC9D;EAED,IAAMmC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAChC9E,KAAA,CAACL,gBAAgB;MAACoF,KAAK,EAAEC,MAAM,CAACC,YAAa;MAAAC,QAAA,GAC3CpF,IAAA,CAACP,IAAI;QAACwF,KAAK,EAAEC,MAAM,CAACG,YAAa;QAAAD,QAAA,EAAEJ,IAAI,CAACrC;MAAI,CAAO,CAAC,EACpD3C,IAAA,CAACN,MAAM;QACLuF,KAAK,EAAEC,MAAM,CAACI,cAAe;QAC7BC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMjD,cAAc,CAACyC,IAAI,CAAC;QAAA;MAAC,CACrC,CAAC;IAAA,CACc,CAAC;EAAA,CACpB;EAED,OACE9E,KAAA,CAACV,IAAI;IAACyF,KAAK,EAAEC,MAAM,CAACO,SAAU;IAAAL,QAAA,GAC5BpF,IAAA,CAACP,IAAI;MAACwF,KAAK,EAAEC,MAAM,CAACQ,UAAW;MAAAN,QAAA,EAAC;IAA2B,CAAM,CAAC,EAElElF,KAAA,CAACV,IAAI;MAACyF,KAAK,EAAEC,MAAM,CAACS,qBAAsB;MAAAP,QAAA,GACxCpF,IAAA,CAACP,IAAI;QAACwF,KAAK,EAAEC,MAAM,CAACU,UAAW;QAAAR,QAAA,EAAC;MAA2B,CAAM,CAAC,EAClEpF,IAAA,CAACL,QAAQ;QACP8E,IAAI,EAAEhE,iBAAiB,CAACQ,MAAM,GAAG,CAAC,GAAGR,iBAAiB,GAAGmE,SAAU;QACnEiB,YAAY,EAAE,SAAAA,aAACb,IAAI,EAAEc,KAAK;UAAA,OACxBd,IAAI,CAACH,EAAE,GAAGG,IAAI,CAACH,EAAE,CAACkB,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACC,QAAQ,CAAC,CAAC;QAAA,CAChD;QACDC,UAAU,EAAElB;MAAmB,CAChC,CAAC;IAAA,CACE,CAAC,EACP5E,KAAA,CAACV,IAAI;MAACyF,KAAK,EAAEC,MAAM,CAACe,oBAAqB;MAAAb,QAAA,GACvClF,KAAA,CAACT,IAAI;QAACwF,KAAK,EAAEC,MAAM,CAACU,UAAW;QAAAR,QAAA,GAC5B,GAAG,EAAC,gDACyC,EAAC,GAAG;MAAA,CAC9C,CAAC,EACPpF,IAAA,CAACJ,SAAS;QACRqF,KAAK,EAAEC,MAAM,CAACgB,gBAAiB;QAC/BC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAEvF,YAAa;QACpBwF,SAAS,EAAE,GAAI;QACfC,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;UACtBzF,eAAe,CAACyF,IAAI,CAAC;UACrBrF,SAAS,CAAC,GAAG,GAAGqF,IAAI,CAACtF,MAAM,CAAC;QAC9B;MAAE,CACH,CAAC,EACFf,KAAA,CAACT,IAAI;QAAA2F,QAAA,GAAC,cAAY,EAACnE,MAAM;MAAA,CAAO,CAAC;IAAA,CAC7B,CAAC,EACPf,KAAA,CAACV,IAAI;MAACyF,KAAK,EAAEC,MAAM,CAACsB,eAAgB;MAAApB,QAAA,GAClCpF,IAAA,CAACN,MAAM;QACLuF,KAAK,EAAEC,MAAM,CAACI,cAAe;QAC7BC,KAAK,EAAC,kBAAkB;QACxBC,OAAO,EAAEjE;MAAgB,CAC1B,CAAC,EACFvB,IAAA,CAACP,IAAI;QAAA2F,QAAA,EAAC;MAAoB,CAAM,CAAC,EACjCpF,IAAA,CAACN,MAAM;QACLuF,KAAK,EAAEC,MAAM,CAACI,cAAe;QAC7BC,KAAK,EAAC,kBAAkB;QACxBC,OAAO,EAAE5C;MAAa,CACvB,CAAC;IAAA,CACE,CAAC,EAEP1C,KAAA,CAACV,IAAI;MAAA4F,QAAA,GACHpF,IAAA,CAACJ,SAAS,IAAE,CAAC,EAEbI,IAAA,CAACR,IAAI;QACHyF,KAAK,EAAE;UACLwB,iBAAiB,EAAE,OAAO;UAC1BC,iBAAiB,EAAE,CAAC;UACpBC,cAAc,EAAE;QAClB;MAAE,CACH,CAAC,EAEF3G,IAAA,CAACP,IAAI;QAACwF,KAAK,EAAEC,MAAM,CAACU,UAAW;QAAAR,QAAA,EAAC;MAA+B,CAAM,CAAC,EAEtEpF,IAAA,CAACL,QAAQ;QACP8E,IAAI,EAAEpD,aAAc;QACpB2E,UAAU,EAAE,SAAAA,WAAAY,KAAA;UAAA,IAAG5B,IAAI,GAAA4B,KAAA,CAAJ5B,IAAI;UAAA,OAAOhF,IAAA,CAACP,IAAI;YAAA2F,QAAA,EAAEJ,IAAI,CAACrC;UAAI,CAAO,CAAC;QAAA,CAAC;QACnDkD,YAAY,EAAE,SAAAA,aAACb,IAAI;UAAA,OAAKA,IAAI,CAACH,EAAE;QAAA;MAAC,CACjC,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,IAAMK,MAAM,GAAG3F,UAAU,CAACsH,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDtB,UAAU,EAAE;IACVuB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDX,eAAe,EAAE;IACfY,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBV,cAAc,EAAE;EAClB,CAAC;EACDV,oBAAoB,EAAE;IACpBU,cAAc,EAAE;EAClB,CAAC;EACDT,gBAAgB,EAAE;IAChBoB,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfd,cAAc,EAAE,CAAC;IACjBI,OAAO,EAAE;EACX,CAAC;EACDzB,cAAc,EAAE;IACd0B,eAAe,EAAE,SAAS;IAC1BU,KAAK,EAAE,MAAM;IACbX,OAAO,EAAE,EAAE;IACXU,YAAY,EAAE;EAChB,CAAC;EACD7B,UAAU,EAAE;IACVqB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfS,UAAU,EAAE;EACd,CAAC;EACDhC,qBAAqB,EAAE;IACrB6B,WAAW,EAAE,CAAC;IACdD,WAAW,EAAE,MAAM;IACnBE,YAAY,EAAE,CAAC;IACfV,OAAO,EAAE,EAAE;IACXa,UAAU,EAAE;EACd,CAAC;EACDzC,YAAY,EAAE;IACZiC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBQ,cAAc,EAAE,eAAe;IAC/Bd,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE,CAAC;IACfF,eAAe,EAAE,SAAS;IAC1BS,YAAY,EAAE;EAChB,CAAC;EACDpC,YAAY,EAAE;IACZ4B,QAAQ,EAAE,EAAE;IACZS,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAevH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}