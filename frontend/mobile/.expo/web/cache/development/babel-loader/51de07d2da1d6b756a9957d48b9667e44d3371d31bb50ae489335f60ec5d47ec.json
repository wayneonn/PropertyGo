{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { CodedError, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport ExpoAppAuth from \"./ExpoAppAuth\";\nexport * from \"./AppAuth.types\";\nfunction isValidServiceConfiguration(config) {\n  return !!(config && typeof config.authorizationEndpoint === 'string' && typeof config.tokenEndpoint === 'string');\n}\nfunction assertValidClientId(clientId) {\n  if (typeof clientId !== 'string' || !clientId.length) {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`clientId` must be a string with more than 0 characters');\n  }\n}\nfunction assertValidProps(_ref) {\n  var issuer = _ref.issuer,\n    redirectUrl = _ref.redirectUrl,\n    clientId = _ref.clientId,\n    serviceConfiguration = _ref.serviceConfiguration;\n  if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', 'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`');\n  }\n  if (typeof redirectUrl !== 'string') {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n  }\n  assertValidClientId(clientId);\n}\nfunction _executeAsync(_x) {\n  return _executeAsync2.apply(this, arguments);\n}\nfunction _executeAsync2() {\n  _executeAsync2 = _asyncToGenerator(function* (props) {\n    if (!props.redirectUrl) {\n      props.redirectUrl = getDefaultOAuthRedirect();\n    }\n    assertValidProps(props);\n    return yield ExpoAppAuth.executeAsync(props);\n  });\n  return _executeAsync2.apply(this, arguments);\n}\nexport function getDefaultOAuthRedirect() {\n  return `${ExpoAppAuth.OAuthRedirect}:/oauthredirect`;\n}\nexport function authAsync(_x2) {\n  return _authAsync.apply(this, arguments);\n}\nfunction _authAsync() {\n  _authAsync = _asyncToGenerator(function* (props) {\n    if (!ExpoAppAuth.executeAsync) {\n      throw new UnavailabilityError('expo-app-auth', 'authAsync');\n    }\n    return yield _executeAsync(props);\n  });\n  return _authAsync.apply(this, arguments);\n}\nexport function refreshAsync(_x3, _x4) {\n  return _refreshAsync.apply(this, arguments);\n}\nfunction _refreshAsync() {\n  _refreshAsync = _asyncToGenerator(function* (props, refreshToken) {\n    if (!ExpoAppAuth.executeAsync) {\n      throw new UnavailabilityError('expo-app-auth', 'refreshAsync');\n    }\n    if (!refreshToken) {\n      throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n    }\n    return yield _executeAsync(_objectSpread({\n      isRefresh: true,\n      refreshToken: refreshToken\n    }, props));\n  });\n  return _refreshAsync.apply(this, arguments);\n}\nexport function revokeAsync(_x5, _x6) {\n  return _revokeAsync.apply(this, arguments);\n}\nfunction _revokeAsync() {\n  _revokeAsync = _asyncToGenerator(function* (_ref2, _ref3) {\n    var clientId = _ref2.clientId,\n      issuer = _ref2.issuer,\n      serviceConfiguration = _ref2.serviceConfiguration;\n    var token = _ref3.token,\n      _ref3$isClientIdProvi = _ref3.isClientIdProvided,\n      isClientIdProvided = _ref3$isClientIdProvi === void 0 ? false : _ref3$isClientIdProvi;\n    if (!token) {\n      throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n    }\n    assertValidClientId(clientId);\n    var revocationEndpoint;\n    if (serviceConfiguration && serviceConfiguration.revocationEndpoint) {\n      revocationEndpoint = serviceConfiguration.revocationEndpoint;\n    } else {\n      var response = yield fetch(`${issuer}/.well-known/openid-configuration`);\n      var openidConfig = yield response.json();\n      invariant(openidConfig.revocation_endpoint, 'The OpenID config does not specify a revocation endpoint');\n      revocationEndpoint = openidConfig.revocation_endpoint;\n    }\n    var encodedClientID = encodeURIComponent(clientId);\n    var encodedToken = encodeURIComponent(token);\n    var body = `token=${encodedToken}${isClientIdProvided ? `&client_id=${encodedClientID}` : ''}`;\n    var headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    try {\n      var results = yield fetch(revocationEndpoint, {\n        method: 'POST',\n        headers: headers,\n        body: body\n      });\n      return results;\n    } catch (error) {\n      throw new CodedError('ERR_APP_AUTH_REVOKE_FAILED', error.message);\n    }\n  });\n  return _revokeAsync.apply(this, arguments);\n}\nvar OAuthRedirect = ExpoAppAuth.OAuthRedirect,\n  URLSchemes = ExpoAppAuth.URLSchemes;\nexport { OAuthRedirect, URLSchemes };","map":{"version":3,"names":["CodedError","UnavailabilityError","invariant","ExpoAppAuth","isValidServiceConfiguration","config","authorizationEndpoint","tokenEndpoint","assertValidClientId","clientId","length","assertValidProps","_ref","issuer","redirectUrl","serviceConfiguration","_executeAsync","_x","_executeAsync2","apply","arguments","_asyncToGenerator","props","getDefaultOAuthRedirect","executeAsync","OAuthRedirect","authAsync","_x2","_authAsync","refreshAsync","_x3","_x4","_refreshAsync","refreshToken","_objectSpread","isRefresh","revokeAsync","_x5","_x6","_revokeAsync","_ref2","_ref3","token","_ref3$isClientIdProvi","isClientIdProvided","revocationEndpoint","response","fetch","openidConfig","json","revocation_endpoint","encodedClientID","encodeURIComponent","encodedToken","body","headers","results","method","error","message","URLSchemes"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/node_modules/expo-app-auth/src/AppAuth.ts"],"sourcesContent":["import { CodedError, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\n\nimport {\n  OAuthBaseProps,\n  OAuthProps,\n  OAuthRevokeOptions,\n  OAuthServiceConfiguration,\n  TokenResponse,\n} from './AppAuth.types';\nimport ExpoAppAuth from './ExpoAppAuth';\n\nexport * from './AppAuth.types';\n\nfunction isValidServiceConfiguration(config?: OAuthServiceConfiguration): boolean {\n  return !!(\n    config &&\n    typeof config.authorizationEndpoint === 'string' &&\n    typeof config.tokenEndpoint === 'string'\n  );\n}\n\nfunction assertValidClientId(clientId?: string): void {\n  if (typeof clientId !== 'string' || !clientId.length) {\n    throw new CodedError(\n      'ERR_APP_AUTH_INVALID_CONFIG',\n      '`clientId` must be a string with more than 0 characters'\n    );\n  }\n}\n\nfunction assertValidProps({\n  issuer,\n  redirectUrl,\n  clientId,\n  serviceConfiguration,\n}: OAuthProps): void {\n  if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n    throw new CodedError(\n      'ERR_APP_AUTH_INVALID_CONFIG',\n      'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`'\n    );\n  }\n  if (typeof redirectUrl !== 'string') {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n  }\n  assertValidClientId(clientId);\n}\n\nasync function _executeAsync(props: OAuthProps): Promise<TokenResponse> {\n  if (!props.redirectUrl) {\n    props.redirectUrl = getDefaultOAuthRedirect();\n  }\n  assertValidProps(props);\n  return await ExpoAppAuth.executeAsync(props);\n}\n\n/** @deprecated `expo-app-auth` has been deprecated in favor of `expo-auth-session`. [Learn more](https://expo.fyi/expo-app-auth-deprecated). */\nexport function getDefaultOAuthRedirect(): string {\n  return `${ExpoAppAuth.OAuthRedirect}:/oauthredirect`;\n}\n\n/** @deprecated `expo-app-auth` has been deprecated in favor of `expo-auth-session`. [Learn more](https://expo.fyi/expo-app-auth-deprecated). */\nexport async function authAsync(props: OAuthProps): Promise<TokenResponse> {\n  if (!ExpoAppAuth.executeAsync) {\n    throw new UnavailabilityError('expo-app-auth', 'authAsync');\n  }\n  return await _executeAsync(props);\n}\n\n/** @deprecated `expo-app-auth` has been deprecated in favor of `expo-auth-session`. [Learn more](https://expo.fyi/expo-app-auth-deprecated). */\nexport async function refreshAsync(\n  props: OAuthProps,\n  refreshToken: string\n): Promise<TokenResponse> {\n  if (!ExpoAppAuth.executeAsync) {\n    throw new UnavailabilityError('expo-app-auth', 'refreshAsync');\n  }\n  if (!refreshToken) {\n    throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n  }\n  return await _executeAsync({\n    isRefresh: true,\n    refreshToken,\n    ...props,\n  });\n}\n\n/** @deprecated `expo-app-auth` has been deprecated in favor of `expo-auth-session`. [Learn more](https://expo.fyi/expo-app-auth-deprecated). */\nexport async function revokeAsync(\n  { clientId, issuer, serviceConfiguration }: OAuthBaseProps,\n  { token, isClientIdProvided = false }: OAuthRevokeOptions\n): Promise<any> {\n  if (!token) {\n    throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n  }\n\n  assertValidClientId(clientId);\n\n  let revocationEndpoint;\n  if (serviceConfiguration && serviceConfiguration.revocationEndpoint) {\n    revocationEndpoint = serviceConfiguration.revocationEndpoint;\n  } else {\n    // For Open IDC providers only.\n    const response = await fetch(`${issuer}/.well-known/openid-configuration`);\n    const openidConfig = await response.json();\n\n    invariant(\n      openidConfig.revocation_endpoint,\n      'The OpenID config does not specify a revocation endpoint'\n    );\n\n    revocationEndpoint = openidConfig.revocation_endpoint;\n  }\n\n  const encodedClientID = encodeURIComponent(clientId);\n  const encodedToken = encodeURIComponent(token);\n  const body = `token=${encodedToken}${isClientIdProvided ? `&client_id=${encodedClientID}` : ''}`;\n  const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n  try {\n    // https://tools.ietf.org/html/rfc7009#section-2.2\n    const results = await fetch(revocationEndpoint, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    return results;\n  } catch (error) {\n    throw new CodedError('ERR_APP_AUTH_REVOKE_FAILED', error.message);\n  }\n}\n\nexport const {\n  /** @deprecated `expo-app-auth` has been deprecated in favor of `expo-auth-session`. [Learn more](https://expo.fyi/expo-app-auth-deprecated). */\n  OAuthRedirect,\n  /** @deprecated `expo-app-auth` has been deprecated in favor of `expo-auth-session`. [Learn more](https://expo.fyi/expo-app-auth-deprecated). */\n  URLSchemes,\n} = ExpoAppAuth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}