{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    country = _useState10[0],\n    setCountry = _useState10[1];\n  var _useState11 = useState(new Date()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateOfBirth = _useState12[0],\n    setDateOfBirth = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showDatePicker = _useState14[0],\n    setShowDatePicker = _useState14[1];\n  var pickerRef = useRef(null);\n  var handleSignUp = function handleSignUp() {\n    console.log({\n      userName: userName,\n      password: password,\n      confirmPassword: confirmPassword,\n      email: email,\n      country: country,\n      dateOfBirth: dateOfBirth\n    });\n  };\n  var openPicker = function openPicker() {\n    pickerRef.current.focus();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"User Name\",\n      placeholderTextColor: \"#888\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      placeholderTextColor: \"#888\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      placeholderTextColor: \"#888\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      placeholderTextColor: \"#888\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\"\n    }), _jsxs(View, {\n      style: styles.pickerContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: openPicker,\n        children: _jsx(Text, {\n          style: styles.pickerText,\n          children: country || 'Select Country'\n        })\n      }), _jsxs(Picker, {\n        style: styles.picker,\n        selectedValue: country,\n        onValueChange: function onValueChange(itemValue) {\n          return setCountry(itemValue);\n        },\n        ref: pickerRef,\n        children: [_jsx(Picker.Item, {\n          label: \"Select Country\",\n          value: \"\"\n        }), _jsx(Picker.Item, {\n          label: \"Singapore\",\n          value: \"Singapore\"\n        }), _jsx(Picker.Item, {\n          label: \"Indonesia\",\n          value: \"Indonesia\"\n        }), _jsx(Picker.Item, {\n          label: \"Malaysia\",\n          value: \"Malaysia\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.datePickerContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.datePicker,\n        onPress: function onPress() {\n          return setShowDatePicker(true);\n        },\n        children: _jsx(Text, {\n          style: styles.datePickerText,\n          children: dateOfBirth.toDateString()\n        })\n      })\n    }), showDatePicker && _jsx(DateTimePicker, {\n      value: dateOfBirth,\n      mode: \"date\",\n      display: \"spinner\",\n      onChange: function onChange(event, selectedDate) {\n        setShowDatePicker(false);\n        if (selectedDate) {\n          setDateOfBirth(selectedDate);\n        }\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSignUp\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    color: 'black'\n  },\n  pickerContainer: {\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  pickerText: {\n    flex: 1,\n    color: 'black'\n  },\n  picker: {\n    flex: 1,\n    color: 'black'\n  },\n  datePickerContainer: {\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    marginBottom: 16\n  },\n  datePicker: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  datePickerText: {\n    color: 'black'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","useRef","StyleSheet","View","TextInput","Text","Button","TouchableOpacity","Platform","Picker","DateTimePicker","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","email","setEmail","_useState9","_useState10","country","setCountry","_useState11","Date","_useState12","dateOfBirth","setDateOfBirth","_useState13","_useState14","showDatePicker","setShowDatePicker","pickerRef","handleSignUp","console","log","openPicker","current","focus","style","styles","container","children","input","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","keyboardType","pickerContainer","onPress","pickerText","picker","selectedValue","onValueChange","itemValue","ref","Item","label","datePickerContainer","datePicker","datePickerText","toDateString","mode","display","onChange","event","selectedDate","title","create","flex","padding","backgroundColor","height","borderColor","borderBottomWidth","marginBottom","paddingVertical","paddingHorizontal","color","flexDirection","alignItems","justifyContent"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/SignUpScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { StyleSheet, View, TextInput, Text, Button, TouchableOpacity, Platform } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst SignUpScreen = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [country, setCountry] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const pickerRef = useRef(null);\n\n  const handleSignUp = () => {\n    // Handle sign up logic here, e.g., send data to your express server\n    console.log({\n      userName,\n      password,\n      confirmPassword,\n      email,\n      country,\n      dateOfBirth,\n    });\n  };\n\n  const openPicker = () => {\n    pickerRef.current.focus();\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"User Name\"\n        placeholderTextColor=\"#888\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        placeholderTextColor=\"#888\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        placeholderTextColor=\"#888\"\n        value={confirmPassword}\n        onChangeText={setConfirmPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        placeholderTextColor=\"#888\"\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n      />\n      <View style={styles.pickerContainer}>\n        <TouchableOpacity onPress={openPicker}>\n          <Text style={styles.pickerText}>{country || 'Select Country'}</Text>\n        </TouchableOpacity>\n        <Picker\n          style={styles.picker}\n          selectedValue={country}\n          onValueChange={(itemValue) => setCountry(itemValue)}\n          ref={pickerRef}\n        >\n          <Picker.Item label=\"Select Country\" value=\"\" />\n          <Picker.Item label=\"Singapore\" value=\"Singapore\" />\n          <Picker.Item label=\"Indonesia\" value=\"Indonesia\" />\n          <Picker.Item label=\"Malaysia\" value=\"Malaysia\" />\n        </Picker>\n      </View>\n      <View style={styles.datePickerContainer}>\n        <TouchableOpacity\n          style={styles.datePicker}\n          onPress={() => setShowDatePicker(true)}\n        >\n          <Text style={styles.datePickerText}>{dateOfBirth.toDateString()}</Text>\n        </TouchableOpacity>\n      </View>\n      {showDatePicker && (\n        <DateTimePicker\n          value={dateOfBirth}\n          mode=\"date\"\n          display=\"spinner\"\n          onChange={(event, selectedDate) => {\n            setShowDatePicker(false);\n            if (selectedDate) {\n              setDateOfBirth(selectedDate);\n            }\n          }}\n        />\n      )}\n      <Button title=\"Sign Up\" onPress={handleSignUp} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  input: {\n    height: 40,\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    color: 'black',\n  },\n  pickerContainer: {\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  pickerText: {\n    flex: 1,\n    color: 'black',\n  },\n  picker: {\n    flex: 1,\n    color: 'black',\n  },\n  datePickerContainer: {\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n  },\n  datePicker: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  datePickerText: {\n    color: 'black',\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAEhD,SAASC,MAAM,QAAQ,6BAA6B;AACpD,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA8CzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAAG,UAAA,GAA0B7B,QAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA8BjC,QAAQ,CAAC,EAAE,CAAC;IAAAkC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAnCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAAG,WAAA,GAAsCrC,QAAQ,CAAC,IAAIsC,IAAI,CAAC,CAAC,CAAC;IAAAC,WAAA,GAAArB,cAAA,CAAAmB,WAAA;IAAnDG,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAAG,WAAA,GAA4C1C,QAAQ,CAAC,KAAK,CAAC;IAAA2C,WAAA,GAAAzB,cAAA,CAAAwB,WAAA;IAApDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAMG,SAAS,GAAG7C,MAAM,CAAC,IAAI,CAAC;EAE9B,IAAM8C,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAEzBC,OAAO,CAACC,GAAG,CAAC;MACV9B,QAAQ,EAARA,QAAQ;MACRI,QAAQ,EAARA,QAAQ;MACRI,eAAe,EAAfA,eAAe;MACfI,KAAK,EAALA,KAAK;MACLI,OAAO,EAAPA,OAAO;MACPK,WAAW,EAAXA;IACF,CAAC,CAAC;EACJ,CAAC;EAED,IAAMU,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBJ,SAAS,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,OACEtC,KAAA,CAACX,IAAI;IAACkD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B5C,IAAA,CAACR,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,WAAW;MACvBC,oBAAoB,EAAC,MAAM;MAC3BC,KAAK,EAAEzC,QAAS;MAChB0C,YAAY,EAAEzC;IAAY,CAC3B,CAAC,EACFR,IAAA,CAACR,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,oBAAoB,EAAC,MAAM;MAC3BC,KAAK,EAAErC,QAAS;MAChBsC,YAAY,EAAErC,WAAY;MAC1BsC,eAAe;IAAA,CAChB,CAAC,EACFlD,IAAA,CAACR,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,kBAAkB;MAC9BC,oBAAoB,EAAC,MAAM;MAC3BC,KAAK,EAAEjC,eAAgB;MACvBkC,YAAY,EAAEjC,kBAAmB;MACjCkC,eAAe;IAAA,CAChB,CAAC,EACFlD,IAAA,CAACR,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,oBAAoB,EAAC,MAAM;MAC3BC,KAAK,EAAE7B,KAAM;MACb8B,YAAY,EAAE7B,QAAS;MACvB+B,YAAY,EAAC;IAAe,CAC7B,CAAC,EACFjD,KAAA,CAACX,IAAI;MAACkD,KAAK,EAAEC,MAAM,CAACU,eAAgB;MAAAR,QAAA,GAClC5C,IAAA,CAACL,gBAAgB;QAAC0D,OAAO,EAAEf,UAAW;QAAAM,QAAA,EACpC5C,IAAA,CAACP,IAAI;UAACgD,KAAK,EAAEC,MAAM,CAACY,UAAW;UAAAV,QAAA,EAAErB,OAAO,IAAI;QAAgB,CAAO;MAAC,CACpD,CAAC,EACnBrB,KAAA,CAACL,MAAM;QACL4C,KAAK,EAAEC,MAAM,CAACa,MAAO;QACrBC,aAAa,EAAEjC,OAAQ;QACvBkC,aAAa,EAAE,SAAAA,cAACC,SAAS;UAAA,OAAKlC,UAAU,CAACkC,SAAS,CAAC;QAAA,CAAC;QACpDC,GAAG,EAAEzB,SAAU;QAAAU,QAAA,GAEf5C,IAAA,CAACH,MAAM,CAAC+D,IAAI;UAACC,KAAK,EAAC,gBAAgB;UAACb,KAAK,EAAC;QAAE,CAAE,CAAC,EAC/ChD,IAAA,CAACH,MAAM,CAAC+D,IAAI;UAACC,KAAK,EAAC,WAAW;UAACb,KAAK,EAAC;QAAW,CAAE,CAAC,EACnDhD,IAAA,CAACH,MAAM,CAAC+D,IAAI;UAACC,KAAK,EAAC,WAAW;UAACb,KAAK,EAAC;QAAW,CAAE,CAAC,EACnDhD,IAAA,CAACH,MAAM,CAAC+D,IAAI;UAACC,KAAK,EAAC,UAAU;UAACb,KAAK,EAAC;QAAU,CAAE,CAAC;MAAA,CAC3C,CAAC;IAAA,CACL,CAAC,EACPhD,IAAA,CAACT,IAAI;MAACkD,KAAK,EAAEC,MAAM,CAACoB,mBAAoB;MAAAlB,QAAA,EACtC5C,IAAA,CAACL,gBAAgB;QACf8C,KAAK,EAAEC,MAAM,CAACqB,UAAW;QACzBV,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMpB,iBAAiB,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAW,QAAA,EAEvC5C,IAAA,CAACP,IAAI;UAACgD,KAAK,EAAEC,MAAM,CAACsB,cAAe;UAAApB,QAAA,EAAEhB,WAAW,CAACqC,YAAY,CAAC;QAAC,CAAO;MAAC,CACvD;IAAC,CACf,CAAC,EACNjC,cAAc,IACbhC,IAAA,CAACF,cAAc;MACbkD,KAAK,EAAEpB,WAAY;MACnBsC,IAAI,EAAC,MAAM;MACXC,OAAO,EAAC,SAAS;MACjBC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,YAAY,EAAK;QACjCrC,iBAAiB,CAAC,KAAK,CAAC;QACxB,IAAIqC,YAAY,EAAE;UAChBzC,cAAc,CAACyC,YAAY,CAAC;QAC9B;MACF;IAAE,CACH,CACF,EACDtE,IAAA,CAACN,MAAM;MAAC6E,KAAK,EAAC,SAAS;MAAClB,OAAO,EAAElB;IAAa,CAAE,CAAC;EAAA,CAC7C,CAAC;AAEX,CAAC;AAED,IAAMO,MAAM,GAAGpD,UAAU,CAACkF,MAAM,CAAC;EAC/B7B,SAAS,EAAE;IACT8B,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACD9B,KAAK,EAAE;IACL+B,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,KAAK,EAAE;EACT,CAAC;EACD9B,eAAe,EAAE;IACfyB,WAAW,EAAE,MAAM;IACnBC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE,EAAE;IAChBI,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACD9B,UAAU,EAAE;IACVmB,IAAI,EAAE,CAAC;IACPS,KAAK,EAAE;EACT,CAAC;EACD3B,MAAM,EAAE;IACNkB,IAAI,EAAE,CAAC;IACPS,KAAK,EAAE;EACT,CAAC;EACDpB,mBAAmB,EAAE;IACnBe,WAAW,EAAE,MAAM;IACnBC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDhB,UAAU,EAAE;IACVa,MAAM,EAAE,EAAE;IACVS,cAAc,EAAE;EAClB,CAAC;EACDrB,cAAc,EAAE;IACdkB,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe/E,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}