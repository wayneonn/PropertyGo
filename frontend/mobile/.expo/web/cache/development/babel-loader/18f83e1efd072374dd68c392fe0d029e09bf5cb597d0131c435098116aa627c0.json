{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    country = _useState10[0],\n    setCountry = _useState10[1];\n  var _useState11 = useState(new Date()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateOfBirth = _useState12[0],\n    setDateOfBirth = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showDatePicker = _useState14[0],\n    setShowDatePicker = _useState14[1];\n  var handleSignUp = function handleSignUp() {\n    console.log({\n      userName: userName,\n      password: password,\n      confirmPassword: confirmPassword,\n      email: email,\n      country: country,\n      dateOfBirth: dateOfBirth\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"User Name\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\"\n    }), _jsxs(Picker, {\n      style: styles.picker,\n      selectedValue: country,\n      onValueChange: function onValueChange(itemValue) {\n        return setCountry(itemValue);\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"USA\",\n        value: \"USA\"\n      }), _jsx(Picker.Item, {\n        label: \"Canada\",\n        value: \"Canada\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.datePicker,\n      onPress: function onPress() {\n        return setShowDatePicker(true);\n      },\n      children: _jsx(Text, {\n        children: dateOfBirth.toDateString()\n      })\n    }), showDatePicker && _jsx(DateTimePicker, {\n      value: dateOfBirth,\n      mode: \"date\",\n      display: \"default\",\n      onChange: function onChange(event, selectedDate) {\n        setShowDatePicker(false);\n        if (selectedDate) {\n          setDateOfBirth(selectedDate);\n        }\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSignUp\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10\n  },\n  picker: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10\n  },\n  datePicker: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","TextInput","Text","Button","TouchableOpacity","Picker","DateTimePicker","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","email","setEmail","_useState9","_useState10","country","setCountry","_useState11","Date","_useState12","dateOfBirth","setDateOfBirth","_useState13","_useState14","showDatePicker","setShowDatePicker","handleSignUp","console","log","style","styles","container","children","input","placeholder","value","onChangeText","secureTextEntry","keyboardType","picker","selectedValue","onValueChange","itemValue","Item","label","datePicker","onPress","toDateString","mode","display","onChange","event","selectedDate","title","create","flex","padding","backgroundColor","height","borderColor","borderWidth","marginBottom","justifyContent","alignItems"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, TextInput, Text, Button, TouchableOpacity } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nconst SignUpScreen = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [country, setCountry] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleSignUp = () => {\n    // Handle sign up logic here, e.g., send data to your express server\n    console.log({\n      userName,\n      password,\n      confirmPassword,\n      email,\n      country,\n      dateOfBirth,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"User Name\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={confirmPassword}\n        onChangeText={setConfirmPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n      />\n      <Picker\n        style={styles.picker}\n        selectedValue={country}\n        onValueChange={(itemValue) => setCountry(itemValue)}\n      >\n        {/* Replace with your list of countries */}\n        <Picker.Item label=\"USA\" value=\"USA\" />\n        <Picker.Item label=\"Canada\" value=\"Canada\" />\n      </Picker>\n      <TouchableOpacity style={styles.datePicker} onPress={() => setShowDatePicker(true)}>\n        <Text>{dateOfBirth.toDateString()}</Text>\n      </TouchableOpacity>\n      {showDatePicker && (\n        <DateTimePicker\n          value={dateOfBirth}\n          mode=\"date\"\n          display=\"default\"\n          onChange={(event, selectedDate) => {\n            setShowDatePicker(false);\n            if (selectedDate) {\n              setDateOfBirth(selectedDate);\n            }\n          }}\n        />\n      )}\n      <Button title=\"Sign Up\" onPress={handleSignUp} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n  },\n  picker: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n  },\n  datePicker: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}