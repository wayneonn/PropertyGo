{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { loginUser } from \"../../utils/api\";\nimport * as Google from 'expo-google-app-auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var showMessage = function showMessage(msg) {\n    setMessage(msg);\n    setTimeout(function () {\n      setMessage(null);\n    }, 3000);\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$loginUser = yield loginUser(userName, password),\n        success = _yield$loginUser.success,\n        data = _yield$loginUser.data,\n        message = _yield$loginUser.message;\n      if (success) {\n        showMessage('Login successful');\n        setTimeout(function () {\n          navigation.navigate('Side Navigator', {\n            user: data\n          });\n        }, 500);\n      } else {\n        showMessage(message);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.iconContainer,\n      children: _jsx(Image, {\n        source: require(\"../../assets/PropertyGo-HighRes-Logo.png\"),\n        style: styles.iconImage\n      })\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      placeholderTextColor: \"black\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      placeholderTextColor: \"black\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"Login\"\n      })\n    }), message && _jsx(View, {\n      style: styles.messageContainer,\n      children: _jsx(Text, {\n        style: styles.messageText,\n        children: message\n      })\n    })]\n  });\n}\nvar styles = {\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  iconContainer: {\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 40\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingLeft: 10,\n    color: 'black'\n  },\n  loginButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    borderRadius: 25,\n    backgroundColor: '#1E90FF',\n    marginVertical: 10\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: 'white'\n  },\n  messageContainer: {\n    position: 'absolute',\n    top: 150,\n    alignSelf: 'center',\n    backgroundColor: 'rgba(144, 238, 144, 0.8)',\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n    borderRadius: 8,\n    marginBottom: 20\n  },\n  messageText: {\n    fontSize: 16,\n    color: 'black'\n  },\n  iconImage: {\n    width: 60,\n    height: 60\n  }\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Image","loginUser","Google","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useState5","_useState6","message","setMessage","showMessage","msg","setTimeout","handleLogin","_ref2","_asyncToGenerator","_yield$loginUser","success","data","navigate","user","apply","arguments","style","styles","container","children","iconContainer","source","require","iconImage","input","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","loginButton","onPress","loginButtonText","messageContainer","messageText","flex","padding","alignItems","marginTop","marginBottom","height","borderColor","borderWidth","paddingLeft","color","justifyContent","borderRadius","backgroundColor","marginVertical","fontSize","position","top","alignSelf","paddingVertical","paddingHorizontal","width"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, Image } from 'react-native';\nimport { loginUser } from '../../utils/api';\nimport * as Google from 'expo-google-app-auth';\n\nfunction LoginScreen({ navigation }) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const showMessage = (msg) => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(null);\n    }, 3000);\n  };\n\n  const handleLogin = async () => {\n    const { success, data, message } = await loginUser(userName, password);\n\n    if (success) {\n      showMessage('Login successful');\n      setTimeout(() => {\n        navigation.navigate('Side Navigator', { user: data });\n      }, 500);\n    } else {\n      showMessage(message);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.iconContainer}>\n        {/* Icon at the top center */}\n        <Image\n          source={require('../../assets/PropertyGo-HighRes-Logo.png')} // Replace with the actual path to your image\n          style={styles.iconImage}\n        />\n      </View>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        placeholderTextColor=\"black\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        placeholderTextColor=\"black\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n        <Text style={styles.loginButtonText}>Login</Text>\n      </TouchableOpacity>\n      {message && (\n        <View style={styles.messageContainer}>\n          <Text style={styles.messageText}>{message}</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  iconContainer: {\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingLeft: 10,\n    color: 'black',\n  },\n  loginButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    borderRadius: 25,\n    backgroundColor: '#1E90FF',\n    marginVertical: 10,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: 'white',\n  },\n  messageContainer: {\n    position: 'absolute',\n    top: 150,\n    alignSelf: 'center',\n    backgroundColor: 'rgba(144, 238, 144, 0.8)',\n    paddingVertical: 20,\n    paddingHorizontal: 40,\n    borderRadius: 8,\n    marginBottom: 20,\n  },\n  messageText: {\n    fontSize: 16,\n    color: 'black',\n  },\n  iconImage: {\n    width: 60,\n    height: 60,\n  },\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}