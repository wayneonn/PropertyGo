{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport * as forwardedProps from \"../../modules/forwardedProps\";\nimport pick from \"../../modules/pick\";\nimport useElementLayout from \"../../modules/useElementLayout\";\nimport useLayoutEffect from \"../../modules/useLayoutEffect\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../modules/usePlatformMethods\";\nimport useResponderEvents from \"../../modules/useResponderEvents\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextInputState from \"../../modules/TextInputState\";\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar TextInput = forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable,\n    _props$keyboardType = props.keyboardType,\n    keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    _props$numberOfLines = props.numberOfLines,\n    numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    returnKeyType = props.returnKeyType,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n    case 'phone-pad':\n      type = 'tel';\n      break;\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n    case 'url':\n      type = 'url';\n      break;\n    default:\n      type = 'text';\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var node = hostRef.current;\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n      if (selectTextOnFocus) {\n        setTimeout(function () {\n          node.select();\n        }, 0);\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","forwardRef","useCallback","useMemo","useRef","createElement","css","forwardedProps","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","TextInput","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","height","width","hostRef","handleContentSizeChange","current","newHeight","scrollHeight","newWidth","scrollWidth","contentSize","imperativeRef","hostNode","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","handleChange","handleFocus","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","classList","classes","textinput","style","compose","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","platformMethodsRef","setRef","ref","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["/Users/limzhongzhi/Desktop/PropertyGo/PropertyGo/frontend/mobile/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput =\n/*#__PURE__*/\nforwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        setTimeout(function () {\n          node.select();\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}