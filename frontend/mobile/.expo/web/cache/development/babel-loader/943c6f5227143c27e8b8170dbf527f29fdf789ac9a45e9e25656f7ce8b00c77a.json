{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DocumentPicker, { types } from 'react-native-document-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var documents = [{\n    id: 1,\n    name: \"Document 1.pdf\"\n  }, {\n    id: 2,\n    name: \"Document 2.docx\"\n  }, {\n    id: 3,\n    name: \"Document 3.txt\"\n  }];\n  var renderDocumentItem = function renderDocumentItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.documentItem,\n      children: _jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Upload your documents here!\"\n    }), _jsx(Button, {\n      title: \"Upload\",\n      onPress: handleUpload\n    }), _jsxs(View, {\n      style: styles.documentListContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"List of Documents:\"\n      }), _jsx(FlatList, {\n        data: selectedDocuments.length > 0 ? selectedDocuments : documents,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: renderDocumentItem\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold'\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14\n  },\n  documentItem: {\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: '#F8F8F8',\n    borderRadius: 8\n  },\n  documentText: {\n    fontSize: 14,\n    color: '#333'\n  }\n});\nexport default UploadScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","Button","FlatList","TouchableOpacity","DocumentPicker","types","jsx","_jsx","jsxs","_jsxs","UploadScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedDocuments","setSelectedDocuments","documents","id","name","renderDocumentItem","_ref2","item","style","styles","documentItem","children","documentText","container","headerText","title","onPress","handleUpload","documentListContainer","detailText","data","length","keyExtractor","toString","renderItem","create","flex","padding","backgroundColor","fontSize","marginBottom","textAlign","fontWeight","borderWidth","borderColor","borderRadius","paddingTop","color"],"sources":["/Users/limzhongzhi/Desktop/PropertyGo/PropertyGo/frontend/mobile/DocumentScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, Text, Button, FlatList, TouchableOpacity } from 'react-native';\nimport DocumentPicker, {types} from 'react-native-document-picker';\n// This fucking thing is still not working. \n\nfunction UploadScreen({ navigation }) {\n  const [selectedDocuments, setSelectedDocuments] = useState([]);\n\n//   const handleUpload = async () => {\n//     try {\n//       const results = await DocumentPicker.pick({\n//         allowMultiSelection : true,\n//         type: [types.pdf]\n//       });\n//       // Extract the selected document names\n//       const selectedNames = results.map((res) => res.name);\n//       setSelectedDocuments(selectedNames);\n//     } catch (error) {\n//       if (DocumentPicker.isCancel(error)) {\n//         // User canceled the picker\n//         console.log('User canceled document picker');\n//       } else {\n//         // Error occurred while picking documents\n//         console.log('Error selecting documents:', error);\n//       }\n//     }\n//   };\n\n  const documents = [\n    { id: 1, name: \"Document 1.pdf\" },\n    { id: 2, name: \"Document 2.docx\" },\n    { id: 3, name: \"Document 3.txt\" },\n    // Add more dummy documents as needed\n  ];\n\n  const renderDocumentItem = ({ item }) => (\n    <TouchableOpacity style={styles.documentItem}>\n      <Text style={styles.documentText}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Upload your documents here!</Text>\n      <Button title=\"Upload\" onPress={handleUpload} />\n\n      {/* Wrap the FlatList in a View with border styles */}\n      <View style={styles.documentListContainer}>\n        <Text style={styles.detailText}>List of Documents:</Text>\n        <FlatList\n          data={selectedDocuments.length > 0 ? selectedDocuments : documents}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderDocumentItem}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold',\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14\n  },\n  documentItem: {\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: '#F8F8F8',\n    borderRadius: 8,\n  },\n  documentText: {\n    fontSize: 14,\n    color: '#333',\n  },\n});\n\nexport default UploadScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}