{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as DocumentPicker from 'expo-document-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UploadScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDocuments = _useState2[0],\n    setSelectedDocuments = _useState2[1];\n  var handleUpload = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var results = yield DocumentPicker.getDocumentAsync({\n          multiple: true\n        });\n        console.log(results);\n        if (results.canceled === false) {\n          var newSelectedDocuments = results.assets.map(function (assets) {\n            return assets.name;\n          });\n          setSelectedDocuments([].concat(_toConsumableArray(selectedDocuments), _toConsumableArray(newSelectedDocuments)));\n        }\n      } catch (error) {\n        console.log('Error selecting documents:', error);\n      }\n    });\n    return function handleUpload() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var documents = [{\n    id: 1,\n    name: \"Document 1.pdf\"\n  }, {\n    id: 2,\n    name: \"Document 2.docx\"\n  }, {\n    id: 3,\n    name: \"Document 3.txt\"\n  }];\n  var renderDocumentItem = function renderDocumentItem(_ref3) {\n    var item = _ref3.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.documentItem,\n      children: _jsx(Text, {\n        style: styles.documentText,\n        children: item.name\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Upload your documents here!\"\n    }), _jsx(Button, {\n      title: \"Upload\",\n      onPress: handleUpload\n    }), _jsxs(View, {\n      style: styles.documentListContainer,\n      children: [_jsx(Text, {\n        style: styles.detailText,\n        children: \"List of Documents:\"\n      }), _jsx(FlatList, {\n        data: selectedDocuments.length > 0 ? selectedDocuments : documents,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: renderDocumentItem\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold'\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14\n  },\n  documentItem: {\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: '#F8F8F8',\n    borderRadius: 8\n  },\n  documentText: {\n    fontSize: 14,\n    color: '#333'\n  }\n});\nexport default UploadScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","Button","FlatList","TouchableOpacity","DocumentPicker","jsx","_jsx","jsxs","_jsxs","UploadScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedDocuments","setSelectedDocuments","handleUpload","_ref2","_asyncToGenerator","results","getDocumentAsync","multiple","console","log","canceled","newSelectedDocuments","assets","map","name","concat","_toConsumableArray","error","apply","arguments","documents","id","renderDocumentItem","_ref3","item","style","styles","documentItem","children","documentText","container","headerText","title","onPress","documentListContainer","detailText","data","length","keyExtractor","toString","renderItem","create","flex","padding","backgroundColor","fontSize","marginBottom","textAlign","fontWeight","borderWidth","borderColor","borderRadius","paddingTop","color"],"sources":["/Users/limzhongzhi/Desktop/PropertyGo/PropertyGo/frontend/mobile/DocumentScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, Text, Button, FlatList, TouchableOpacity } from 'react-native';\nimport * as DocumentPicker from 'expo-document-picker';\n\nfunction UploadScreen({ navigation }) {\n  const [selectedDocuments, setSelectedDocuments] = useState([]);\n\n  const handleUpload = async () => {\n    try {\n      const results = await DocumentPicker.getDocumentAsync({ multiple: true });\n      console.log(results); \n      if (results.canceled === false) {\n        const newSelectedDocuments = results.assets.map( assets => assets.name);\n        setSelectedDocuments([...selectedDocuments, ...newSelectedDocuments]);\n      }\n    } catch (error) {\n      console.log('Error selecting documents:', error);\n    }\n  };\n\n  const documents = [\n    { id: 1, name: \"Document 1.pdf\" },\n    { id: 2, name: \"Document 2.docx\" },\n    { id: 3, name: \"Document 3.txt\" },\n    // Add more dummy documents as needed\n  ];\n\n  const renderDocumentItem = ({ item }) => (\n    <TouchableOpacity style={styles.documentItem}>\n      <Text style={styles.documentText}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Upload your documents here!</Text>\n      <Button title=\"Upload\" onPress={handleUpload} />\n\n      {/* Wrap the FlatList in a View with border styles */}\n      <View style={styles.documentListContainer}>\n        <Text style={styles.detailText}>List of Documents:</Text>\n        <FlatList\n          data={selectedDocuments.length > 0 ? selectedDocuments : documents}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderDocumentItem}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  headerText: {\n    fontSize: 24,\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold',\n  },\n  documentListContainer: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    paddingTop: 14\n  },\n  documentItem: {\n    padding: 12,\n    marginBottom: 8,\n    backgroundColor: '#F8F8F8',\n    borderRadius: 8,\n  },\n  documentText: {\n    fontSize: 14,\n    color: '#333',\n  },\n});\n\nexport default UploadScreen;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAExC,OAAO,KAAKC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvD,SAASC,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,IAAAC,SAAA,GAAkDf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAE9C,IAAMI,YAAY;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACF,IAAMC,OAAO,SAAShB,cAAc,CAACiB,gBAAgB,CAAC;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;QACzEC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;QACpB,IAAIA,OAAO,CAACK,QAAQ,KAAK,KAAK,EAAE;UAC9B,IAAMC,oBAAoB,GAAGN,OAAO,CAACO,MAAM,CAACC,GAAG,CAAE,UAAAD,MAAM;YAAA,OAAIA,MAAM,CAACE,IAAI;UAAA,EAAC;UACvEb,oBAAoB,IAAAc,MAAA,CAAAC,kBAAA,CAAKhB,iBAAiB,GAAAgB,kBAAA,CAAKL,oBAAoB,EAAC,CAAC;QACvE;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdT,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEQ,KAAK,CAAC;MAClD;IACF,CAAC;IAAA,gBAXKf,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAe,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWjB;EAED,IAAMC,SAAS,GAAG,CAChB;IAAEC,EAAE,EAAE,CAAC;IAAEP,IAAI,EAAE;EAAiB,CAAC,EACjC;IAAEO,EAAE,EAAE,CAAC;IAAEP,IAAI,EAAE;EAAkB,CAAC,EAClC;IAAEO,EAAE,EAAE,CAAC;IAAEP,IAAI,EAAE;EAAiB,CAAC,CAElC;EAED,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAChCjC,IAAA,CAACH,gBAAgB;MAACqC,KAAK,EAAEC,MAAM,CAACC,YAAa;MAAAC,QAAA,EAC3CrC,IAAA,CAACN,IAAI;QAACwC,KAAK,EAAEC,MAAM,CAACG,YAAa;QAAAD,QAAA,EAAEJ,IAAI,CAACV;MAAI,CAAO;IAAC,CACpC,CAAC;EAAA,CACpB;EAED,OACErB,KAAA,CAACT,IAAI;IAACyC,KAAK,EAAEC,MAAM,CAACI,SAAU;IAAAF,QAAA,GAC5BrC,IAAA,CAACN,IAAI;MAACwC,KAAK,EAAEC,MAAM,CAACK,UAAW;MAAAH,QAAA,EAAC;IAA2B,CAAM,CAAC,EAClErC,IAAA,CAACL,MAAM;MAAC8C,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAE/B;IAAa,CAAE,CAAC,EAGhDT,KAAA,CAACT,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACQ,qBAAsB;MAAAN,QAAA,GACxCrC,IAAA,CAACN,IAAI;QAACwC,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAP,QAAA,EAAC;MAAkB,CAAM,CAAC,EACzDrC,IAAA,CAACJ,QAAQ;QACPiD,IAAI,EAAEpC,iBAAiB,CAACqC,MAAM,GAAG,CAAC,GAAGrC,iBAAiB,GAAGoB,SAAU;QACnEkB,YAAY,EAAE,SAAAA,aAACd,IAAI;UAAA,OAAKA,IAAI,CAACH,EAAE,CAACkB,QAAQ,CAAC,CAAC;QAAA,CAAC;QAC3CC,UAAU,EAAElB;MAAmB,CAChC,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,IAAMI,MAAM,GAAG3C,UAAU,CAAC0D,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDb,UAAU,EAAE;IACVc,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDZ,UAAU,EAAE;IACVU,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfE,UAAU,EAAE;EACd,CAAC;EACDd,qBAAqB,EAAE;IACrBe,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfR,OAAO,EAAE,EAAE;IACXS,UAAU,EAAE;EACd,CAAC;EACDzB,YAAY,EAAE;IACZgB,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE,CAAC;IACfF,eAAe,EAAE,SAAS;IAC1BO,YAAY,EAAE;EAChB,CAAC;EACDtB,YAAY,EAAE;IACZgB,QAAQ,EAAE,EAAE;IACZQ,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe3D,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}