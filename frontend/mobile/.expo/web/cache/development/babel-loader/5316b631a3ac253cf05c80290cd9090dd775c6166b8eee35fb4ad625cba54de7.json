{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = [{\n  label: 'Select Country',\n  value: ''\n}, {\n  label: 'Singapore',\n  value: 'Singapore'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Malaysia',\n  value: 'Malaysia'\n}];\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    country = _useState10[0],\n    setCountry = _useState10[1];\n  var _useState11 = useState(new Date()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateOfBirth = _useState12[0],\n    setDateOfBirth = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isDatePickerVisible = _useState14[0],\n    setDatePickerVisibility = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isCountryPickerVisible = _useState16[0],\n    setCountryPickerVisibility = _useState16[1];\n  var handleSignUp = function () {\n    var _ref = _asyncToGenerator(function* () {});\n    return function handleSignUp() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"User Name\",\n      value: userName,\n      onChangeText: setUserName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.pickerButton,\n      onPress: function onPress() {\n        return setCountryPickerVisibility(true);\n      },\n      children: _jsx(Text, {\n        style: styles.pickerButtonText,\n        children: country || 'Select Country'\n      })\n    }), _jsx(Picker, {\n      selectedValue: country,\n      onValueChange: function onValueChange(itemValue) {\n        return setCountry(itemValue);\n      },\n      style: _objectSpread(_objectSpread({}, styles.picker), {}, {\n        opacity: isCountryPickerVisible ? 1 : 0\n      }),\n      children: countries.map(function (item) {\n        return _jsx(Picker.Item, {\n          label: item.label,\n          value: item.value\n        }, item.value);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.datePickerButton,\n      onPress: function onPress() {\n        return setDatePickerVisibility(true);\n      },\n      children: _jsx(Text, {\n        style: styles.datePickerText,\n        children: dateOfBirth.toDateString()\n      })\n    }), _jsx(DateTimePicker, {\n      isVisible: isDatePickerVisible,\n      mode: \"date\",\n      onConfirm: function onConfirm(date) {\n        setDateOfBirth(date);\n        setDatePickerVisibility(false);\n      },\n      onCancel: function onCancel() {\n        return setDatePickerVisibility(false);\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSignUp\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10\n  },\n  pickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10\n  },\n  pickerButtonText: {\n    color: 'black'\n  },\n  picker: {\n    height: 50,\n    marginBottom: 10\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10\n  },\n  datePickerText: {\n    fontSize: 16\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","TextInput","Text","Button","TouchableOpacity","Picker","DateTimePicker","jsx","_jsx","jsxs","_jsxs","countries","label","value","SignUpScreen","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","email","setEmail","_useState9","_useState10","country","setCountry","_useState11","Date","_useState12","dateOfBirth","setDateOfBirth","_useState13","_useState14","isDatePickerVisible","setDatePickerVisibility","_useState15","_useState16","isCountryPickerVisible","setCountryPickerVisibility","handleSignUp","_ref","_asyncToGenerator","apply","arguments","style","styles","container","children","input","placeholder","onChangeText","secureTextEntry","keyboardType","pickerButton","onPress","pickerButtonText","selectedValue","onValueChange","itemValue","_objectSpread","picker","opacity","map","item","Item","datePickerButton","datePickerText","toDateString","isVisible","mode","onConfirm","date","onCancel","title","create","flex","padding","height","borderColor","borderWidth","marginBottom","justifyContent","paddingLeft","color","fontSize"],"sources":["/Users/wayneonn/Code/PropertyGo/frontend/mobile/screens/login/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  Text,\n  Button,\n  TouchableOpacity,\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\n\nconst countries = [\n  { label: 'Select Country', value: '' },\n  { label: 'Singapore', value: 'Singapore' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Malaysia', value: 'Malaysia' },\n];\n\nconst SignUpScreen = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [country, setCountry] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [isCountryPickerVisible, setCountryPickerVisibility] = useState(false);\n\n  const handleSignUp = async () => {\n    // Handle signup logic\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"User Name\"\n        value={userName}\n        onChangeText={setUserName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={confirmPassword}\n        onChangeText={setConfirmPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n      />\n      <TouchableOpacity\n        style={styles.pickerButton}\n        onPress={() => setCountryPickerVisibility(true)}\n      >\n        <Text style={styles.pickerButtonText}>\n          {country || 'Select Country'}\n        </Text>\n      </TouchableOpacity>\n      <Picker\n        selectedValue={country}\n        onValueChange={(itemValue) => setCountry(itemValue)}\n        style={{\n          ...styles.picker,\n          opacity: isCountryPickerVisible ? 1 : 0, // Hide the Picker when not visible\n        }}\n      >\n        {countries.map((item) => (\n          <Picker.Item key={item.value} label={item.label} value={item.value} />\n        ))}\n      </Picker>\n      <TouchableOpacity\n        style={styles.datePickerButton}\n        onPress={() => setDatePickerVisibility(true)}\n      >\n        <Text style={styles.datePickerText}>\n          {dateOfBirth.toDateString()}\n        </Text>\n      </TouchableOpacity>\n      <DateTimePicker\n        isVisible={isDatePickerVisible}\n        mode=\"date\"\n        onConfirm={(date) => {\n          setDateOfBirth(date);\n          setDatePickerVisibility(false);\n        }}\n        onCancel={() => setDatePickerVisibility(false)}\n      />\n      <Button title=\"Sign Up\" onPress={handleSignUp} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n  },\n  pickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10,\n  },\n  pickerButtonText: {\n    color: 'black',\n  },\n  picker: {\n    height: 50,\n    marginBottom: 10,\n  },\n  datePickerButton: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    justifyContent: 'center',\n    paddingLeft: 10,\n  },\n  datePickerText: {\n    fontSize: 16,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}